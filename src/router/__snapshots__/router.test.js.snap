// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test of component of Router Initial 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Main />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "basename": "/",
      "children": <withRouter(LastLocationProvider)>
        <Row
          gutter={0}
          style={
            Object {
              "margin": "0px 0 30px",
            }
          }
        >
          <Col>
            <Adapter
              className="user-layout"
            >
              <UNDEFINED />
            </Adapter>
          </Col>
        </Row>
        <div
          className="page"
        >
          <Switch>
            <Route
              component={[Function]}
              exact={true}
              path="/"
            />
            <Route
              component={[Function]}
              path="/users/:id/photos"
            />
            <Route
              component={[Function]}
              path="/photo/:id"
            />
            <Route
              component={[Function]}
              path="/profile"
            />
            <Route
              component={[Function]}
              path="/users/:id"
            />
          </Switch>
        </div>
      </withRouter(LastLocationProvider)>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Row
            gutter={0}
            style={
              Object {
                "margin": "0px 0 30px",
              }
            }
          >
            <Col>
              <Adapter
                className="user-layout"
              >
                <UNDEFINED />
              </Adapter>
            </Col>
          </Row>,
          <div
            className="page"
          >
            <Switch>
              <Route
                component={[Function]}
                exact={true}
                path="/"
              />
              <Route
                component={[Function]}
                path="/users/:id/photos"
              />
              <Route
                component={[Function]}
                path="/photo/:id"
              />
              <Route
                component={[Function]}
                path="/profile"
              />
              <Route
                component={[Function]}
                path="/users/:id"
              />
            </Switch>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Col>
              <Adapter
                className="user-layout"
              >
                <UNDEFINED />
              </Adapter>
            </Col>,
            "gutter": 0,
            "style": Object {
              "margin": "0px 0 30px",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Adapter
                className="user-layout"
              >
                <UNDEFINED />
              </Adapter>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <UNDEFINED />,
                "className": "user-layout",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.memo),
                  "WrappedComponent": [Function],
                  "compare": null,
                  "displayName": "Connect(withRouter(WithLastLocation(withRouter())))",
                  "type": [Function],
                  Symbol(Symbol.hasInstance): [Function],
                },
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Switch>
              <Route
                component={[Function]}
                exact={true}
                path="/"
              />
              <Route
                component={[Function]}
                path="/users/:id/photos"
              />
              <Route
                component={[Function]}
                path="/photo/:id"
              />
              <Route
                component={[Function]}
                path="/profile"
              />
              <Route
                component={[Function]}
                path="/users/:id"
              />
            </Switch>,
            "className": "page",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />,
                <Route
                  component={[Function]}
                  path="/users/:id/photos"
                />,
                <Route
                  component={[Function]}
                  path="/photo/:id"
                />,
                <Route
                  component={[Function]}
                  path="/profile"
                />,
                <Route
                  component={[Function]}
                  path="/users/:id"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/users/:id/photos",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/photo/:id",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/profile",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "path": "/users/:id",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "basename": "/",
        "children": <withRouter(LastLocationProvider)>
          <Row
            gutter={0}
            style={
              Object {
                "margin": "0px 0 30px",
              }
            }
          >
            <Col>
              <Adapter
                className="user-layout"
              >
                <UNDEFINED />
              </Adapter>
            </Col>
          </Row>
          <div
            className="page"
          >
            <Switch>
              <Route
                component={[Function]}
                exact={true}
                path="/"
              />
              <Route
                component={[Function]}
                path="/users/:id/photos"
              />
              <Route
                component={[Function]}
                path="/photo/:id"
              />
              <Route
                component={[Function]}
                path="/profile"
              />
              <Route
                component={[Function]}
                path="/users/:id"
              />
            </Switch>
          </div>
        </withRouter(LastLocationProvider)>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Row
              gutter={0}
              style={
                Object {
                  "margin": "0px 0 30px",
                }
              }
            >
              <Col>
                <Adapter
                  className="user-layout"
                >
                  <UNDEFINED />
                </Adapter>
              </Col>
            </Row>,
            <div
              className="page"
            >
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/users/:id/photos"
                />
                <Route
                  component={[Function]}
                  path="/photo/:id"
                />
                <Route
                  component={[Function]}
                  path="/profile"
                />
                <Route
                  component={[Function]}
                  path="/users/:id"
                />
              </Switch>
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Col>
                <Adapter
                  className="user-layout"
                >
                  <UNDEFINED />
                </Adapter>
              </Col>,
              "gutter": 0,
              "style": Object {
                "margin": "0px 0 30px",
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Adapter
                  className="user-layout"
                >
                  <UNDEFINED />
                </Adapter>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <UNDEFINED />,
                  "className": "user-layout",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": Object {
                    "$$typeof": Symbol(react.memo),
                    "WrappedComponent": [Function],
                    "compare": null,
                    "displayName": "Connect(withRouter(WithLastLocation(withRouter())))",
                    "type": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  },
                },
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  path="/users/:id/photos"
                />
                <Route
                  component={[Function]}
                  path="/photo/:id"
                />
                <Route
                  component={[Function]}
                  path="/profile"
                />
                <Route
                  component={[Function]}
                  path="/users/:id"
                />
              </Switch>,
              "className": "page",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />,
                  <Route
                    component={[Function]}
                    path="/users/:id/photos"
                  />,
                  <Route
                    component={[Function]}
                    path="/photo/:id"
                  />,
                  <Route
                    component={[Function]}
                    path="/profile"
                  />,
                  <Route
                    component={[Function]}
                    path="/users/:id"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/users/:id/photos",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/photo/:id",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/profile",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "path": "/users/:id",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
