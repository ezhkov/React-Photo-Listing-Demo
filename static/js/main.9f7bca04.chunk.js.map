{"version":3,"sources":["components/ButtonBack/index.js","constants/api.js","constants/chart.js","actions/index.js","components/HeaderApp/index.js","components/NavTop/index.js","components/PhotoCard/index.js","components/Search/index.js","components/Spinner/index.js","pages/Home/index.js","pages/Photo/index.js","pages/Profile/index.js","pages/User/index.js","pages/UserLikesPhotos/index.js","pages/UserPhotoListing/index.js","pages/UserStatistic/index.js","router/index.js","serviceWorker.js","initialStore.js","filters.js","reducers/login.js","reducers/photolisting.js","reducers/userstatistic.js","reducers/photo.js","reducers/index.js","sagas/loginSaga.js","sagas/photolistingSaga.js","sagas/userstatistic.js","sagas/photo.js","sagas/index.js","index.js"],"names":["ButtonBack","withRouter","_ref","history","lastLocation","react_default","a","createElement","es_button","className","type","onClick","push","pathname","icon","withLastLocation","URL_FOR_PROFILE_ME","concat","process","URL_FOR_TOKEN","URL_FOR_AVATAR_PLACEHOLDER","URL_FOR_CARDS_PHOTOS","URL_FOR_LOGIN","URL_FOR_PHOTO_QUERY","match","params","id","URL_FOR_USER_QUERY","URL_FOR_USER_LIKES_QUERY","userId","URL_FOR_USER_PHOTO_LISTING_QUERY","URL_FOR_USER_STATISTIC","INITIONAL_CHARTS_CONFIGS","highchartsDownloadsConfig","title","seriesName","colors","highchartsViewsConfig","highchartsLikesConfig","CHARTS_CATEGORIES","CHART_CONFIG","legend","layout","align","verticalAlign","responsive","rules","condition","maxWidth","chartOptions","logoutAction","Header","Layout","HeaderApp","memo","props","profileName","profilePhotoUrl","handleAction","row","justify","col","span","style","whiteSpace","Link","to","display","component","alt","src","Route","path","components_ButtonBack","marginLeft","href","window","localStorage","clear","justifyContent","defaultProps","profileEmail","fetching","mapDispatchToProps","connect","state","login","NavTop","onFilterItemValue","label","filterValue","itemId","navTopItemActive","tag","color","propTypes","PropTypes","string","func","number","Meta","Card","PhotoCard","tags","photoName","photoDesc","photoID","userID","userAvatar","onSearchTagValue","card","width","cover","avatar","map","item","i","key","length","popover","placement","content","trigger","InputSearch","Input","Search","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","componentDidUpdate","prevProps","queryText","setState","inputValue","onChangeDebounced","debounce","value","onChangeInputValue","submitSearch","onSearchInputValue","handleInputChange","event","target","placeholder","onChange","onPressEnter","onSearch","PureComponent","Spinner","Home","_this$props","cardsData","cardsPhotosRequestAction","componentDidMount","handleCardsPhotos","_this$props2","handlePaginationChange","currentPage","paginationChangeAction","handleFilterItemValue","itemText","filterItemValueAction","handleSearchText","text","searchTextAction","handleChangeInputValue","searchChangeInputValueAction","_this2","_this$props3","filters","isListingLoading","cards","totalCards","photolistingRequestError","components_Spinner","src_components_Search","query","border","components_NavTop","components_PhotoCard","urls","regular","description","user","first_name","username","profile_image","small","per_page","pagination","showSizeChanger","current","page","defaultCurrent","total","photolisting","Photo","photoRequestAction","isPhotoLoading","requestError","photoSrc","userNic","userPortfolioUrl","console","log","Photo_Meta","photo","Profile","loadingRequestAction","document","location","handleLoguotProfile","loginError","profileFullName","TabPane","Tabs","User","handleUserQuery","API_URL","axios","get","then","res","userPhoto","userFirstPhoto","catch","_this$state","size","overflow","tabs","defaultActiveKey","tab","src_pages_UserPhotoListing","src_pages_UserLikesPhotos","src_pages_UserStatistic","UserLikesPhotos","handleUserLikesPhotosQuery","perPage","client_id","parseInt","_this$state2","margin","photo_tags","UserPhotoListing","handleUserPhotoListingQuery","UserStatistic","userStatistingRequestAction","highchartsConfigs","ReactHighcharts_default","config","userstatistic","Main","BrowserRouter","basename","dist","components_HeaderApp","Switch","exact","src_pages_Home","pages_Photo","src_pages_Profile","pages_User","Boolean","hostname","initialStore","undefined","action","objectSpread","data","responceObj","highchartsConfigsObject","allRedusers","combineReducers","loginAfterToken","loginSaga","token","headers","response","regenerator_default","wrap","_context","prev","next","Authorization","sent","put","t0","stop","_marked","tokenFirst","code","axiosRequestForToken","_response","_context2","getItem","search","split","url","body","redirect_uri","client_secret","grant_type","post","setItem","_marked2","cardsPhotosRequestSaga","axiosRequestForcardsPhotos","error","photolistingSaga_marked","userStatisticRequestSaga","createCharts","configArr","entries","newObj","forEach","chart","xAxis","categories","plotOptions","area","stacking","lineColor","lineWidth","marker","series","name","axiosRequestUserStatistic","highchartsDownloadsConfigData","highchartsViewsConfigData","highchartsLikesConfigData","moment","date","format","userstatistic_marked","photoRequestSaga","photo_marked","rootSaga","all","takeEvery","t1","t2","t3","t4","t5","sagas_marked","sagaMiddleware","createSagaMiddleware","middleware","store","createStore","applyMiddleware","run","render","es","src_router","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9f7bca04.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Icon } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport { withLastLocation } from 'react-router-last-location';\nimport './index.scss';\n\nconst ButtonBack = withRouter(({ history, lastLocation }) => {\n  if (!lastLocation) return false;\n  return (\n    <Button\n      className=\"btn-back\"\n      type=\"default\"\n      onClick={() => {\n        history.push(lastLocation.pathname);\n      }}\n    >\n      <Icon type=\"left\" />\n      Go back\n    </Button>\n  );\n});\n\nexport default withLastLocation(ButtonBack);\n","export const URL_FOR_PROFILE_ME = `${process.env.REACT_APP_PROFILE}/me`;\nexport const URL_FOR_TOKEN = 'https://unsplash.com/oauth/token';\nexport const URL_FOR_AVATAR_PLACEHOLDER = `${process.env.PUBLIC_URL}/ava-placeholder.jpg`;\nexport const URL_FOR_CARDS_PHOTOS = 'https://api.unsplash.com/search/photos';\nexport const URL_FOR_LOGIN = `https://unsplash.com/oauth/authorize?redirect_uri=${\n  process.env.REACT_APP_UNSPLASH_API_REDIRECT_URI\n}&response_type=code&scope=public+read_user+write_user+read_photos+write_likes+write_photos+write_followers+read_collections+write_collections&client_id=${\n  process.env.REACT_APP_UNSPLASH_API_KEY\n}`;\nexport const URL_FOR_PHOTO_QUERY = match => `${process.env.REACT_APP_UNSPLASH_API_NAME}photos/${match.params.id}?client_id=${process.env.REACT_APP_UNSPLASH_API_KEY}`;\nexport const URL_FOR_USER_QUERY = match => `${process.env.REACT_APP_UNSPLASH_API_NAME}users/${match.params.id}?client_id=${process.env.REACT_APP_UNSPLASH_API_KEY}`;\nexport const URL_FOR_USER_LIKES_QUERY = userId => `${process.env.REACT_APP_UNSPLASH_API_NAME}users/${userId}/likes`;\nexport const URL_FOR_USER_PHOTO_LISTING_QUERY = userId => `${process.env.REACT_APP_UNSPLASH_API_NAME}users/${userId}/photos`;\nexport const URL_FOR_USER_STATISTIC = userId => `${process.env.REACT_APP_UNSPLASH_API_NAME}users/${userId}/statistics`;\n","export const INITIONAL_CHARTS_CONFIGS = {\n  highchartsDownloadsConfig: {\n    title: 'My Downloads',\n    seriesName: 'Downloads',\n    colors: 'rgba(255, 0, 255, .5)',\n  },\n  highchartsViewsConfig: {\n    title: 'My Views',\n    seriesName: 'Views',\n    colors: 'rgba(255, 165, 0, .5)',\n  },\n  highchartsLikesConfig: {\n    title: 'My Likes',\n    seriesName: 'Likes',\n    colors: 'rgba(0, 255, 0, .5)',\n  },\n};\nexport const CHARTS_CATEGORIES = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nexport const CHART_CONFIG = {\n  legend: {\n    layout: 'vertical',\n    align: 'right',\n    verticalAlign: 'middle',\n  },\n  responsive: {\n    rules: [{\n      condition: {\n        maxWidth: 700,\n      },\n      chartOptions: {\n        legend: {\n          layout: 'horizontal',\n          align: 'center',\n          verticalAlign: 'bottom',\n        },\n      },\n    }],\n  },\n};\n","export const logoutAction = () => ({\n  type: 'LOGOUT',\n});\n\nexport const photoRequestAction = match => ({\n  type: 'PHOTO_FETCHING',\n  isPhotoLoading: true,\n  match,\n});\n\nexport const userStatistingRequestAction = userId => ({\n  type: 'USER_STATISTIC_FETCHING',\n  isListingLoading: true,\n  userId,\n});\n\nexport const loadingRequestAction = location => ({\n  type: 'LOGIN_FETCHING',\n  fetching: true,\n  location,\n});\n\nexport const cardsPhotosRequestAction = cardsData => ({\n  type: 'CARDS_PHOTOS_FETCHING',\n  isListingLoading: true,\n  cardsData,\n});\n\nexport const paginationChangeAction = currentPage => ({\n  type: 'PAGINATION_CHANGE',\n  page: currentPage,\n});\n\nexport const filterItemValueAction = (itemText, itemId) => ({\n  type: 'FILTER_ITEM_VALUE',\n  itemText,\n  itemId,\n});\n\nexport const searchTextAction = (text, tags) => ({\n  type: 'SEARCH_TEXT',\n  tags,\n  text,\n});\n\nexport const searchChangeInputValueAction = text => ({\n  type: 'SEARCH_TEXT_CHANGE_INPUT_VALUE',\n  text,\n});\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Link, withRouter } from 'react-router-dom';\nimport {\n  Layout,\n  Icon,\n  Button,\n  Row,\n  Col,\n} from 'antd';\nimport { withLastLocation } from 'react-router-last-location';\nimport { connect } from 'react-redux';\nimport { ButtonBack } from '../index';\nimport { URL_FOR_LOGIN } from '../../constants';\nimport { logoutAction } from '../../actions';\nimport './index.scss';\n\nconst { Header } = Layout;\n\nconst HeaderApp = withRouter(memo((props) => {\n  const {\n    history,\n    profileName,\n    profilePhotoUrl,\n    logoutAction: handleAction,\n  } = props;\n  const handleLoguotHeader = () => {\n    handleAction();\n    window.localStorage.clear();\n    history.push('/');\n  };\n  return (\n    <div className=\"header-app\">\n      <Header className=\"user-layout__header\">\n        <div className=\"page\">\n          <Row type=\"flex\" justify=\"space-between\">\n            <Col span={9} style={{ whiteSpace: 'nowrap' }}>\n              <Link to=\"/\" style={{ display: 'inline-block' }}>\n                <Icon\n                  component={() => (\n                    <img\n                      className=\"user__icon-home\"\n                      alt=\"/unsplash.com\"\n                      src={`${process.env.PUBLIC_URL}/logo.svg` || './logo.svg'}\n                    />\n                  )}\n                />\n              </Link>\n              <Route path=\"/:id\" component={() => <ButtonBack style={{ marginLeft: '10px' }} />} />\n\n              {!profileName && (\n                <Button\n                  style={{ marginLeft: '10px' }}\n                  href={URL_FOR_LOGIN}\n                >\n                  Login\n                </Button>\n              )}\n              {profileName && (\n                <span>\n                  <Button\n                    className=\"btn-logout\"\n                    style={{ marginLeft: '10px' }}\n                    onClick={handleLoguotHeader}\n                  >\n                    Logout\n                  </Button>\n                </span>\n              )}\n            </Col>\n\n            <Col span={3} style={{ display: 'flex', justifyContent: 'flex-end' }}>\n              {profileName && (\n                <Link to=\"/profile\">\n                  <Icon\n                    component={() => (\n                      <img\n                        className=\"user-avatar\"\n                        alt=\"\"\n                        src={`${profilePhotoUrl}`}\n                      />\n                    )}\n                  />\n                </Link>\n              )}\n            </Col>\n          </Row>\n        </div>\n      </Header>\n    </div>\n  );\n}));\n\nHeaderApp.propTypes = {\n  history: PropTypes.shape({\n    prop: PropTypes.string,\n  }),\n  logoutAction: PropTypes.func,\n  profilePhotoUrl: PropTypes.string,\n  profileName: PropTypes.string,\n  profileEmail: PropTypes.string,\n  fetching: PropTypes.bool,\n};\nHeaderApp.defaultProps = {\n  history: {},\n  logoutAction: () => {},\n  profilePhotoUrl: '',\n  profileName: '',\n  profileEmail: '',\n  fetching: false,\n};\n\nconst mapStateToProps = (state) => {\n  const { login } = state;\n  return login;\n};\n\nconst mapDispatchToProps = {\n  logoutAction,\n};\n\nexport default withLastLocation(connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(HeaderApp));\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Tag } from 'antd';\nimport './index.scss';\n\nconst NavTop = memo(({\n  onFilterItemValue,\n  label,\n  filterValue,\n  itemId,\n  navTopItemActive,\n}) => (\n  <Tag color={`${itemId === navTopItemActive ? 'purple' : ''}`} onClick={() => onFilterItemValue(filterValue, itemId)}>{label}</Tag>\n));\n\nNavTop.propTypes = {\n  label: PropTypes.string,\n  filterValue: PropTypes.string,\n  onFilterItemValue: PropTypes.func,\n  itemId: PropTypes.number,\n  navTopItemActive: PropTypes.number,\n};\nNavTop.defaultProps = {\n  itemId: 0,\n  navTopItemActive: 0,\n  label: '',\n  filterValue: '',\n  onFilterItemValue: () => { },\n};\nexport default NavTop;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport {\n  Card,\n  Avatar,\n  Tag,\n  Popover,\n} from 'antd';\nimport './index.scss';\n\nconst { Meta } = Card;\n\nconst PhotoCard = memo(({\n  tags,\n  photoName,\n  photoDesc,\n  title,\n  photoID,\n  userID,\n  userAvatar,\n  onSearchTagValue,\n}) => (\n  <div className=\"photo-card-self\">\n    <Card\n      style={{ width: '100%' }}\n      cover={(\n        <Link className=\"photo-card__photo-link\" to={`/photo/${photoID}`}>\n          <img\n            className=\"photo-card__img\"\n            alt=\"example\"\n            src={photoName}\n          />\n        </Link>\n        )}\n    >\n      { title && (\n        <Link className=\"photo-card-self__link-ava\" to={`/users/${userID}`}>\n          <Meta\n            avatar={\n              <Avatar src={userAvatar} />\n            }\n            title={title}\n          />\n        </Link>\n      )}\n      <p className=\"photo-card-self__desc\">\n        {`${photoDesc || 'No Description'}`}\n      </p>\n      <div className=\"photo-card-self__badge-wrap\">\n        {tags.map((item, i) => {\n          if (i < 3) {\n            return (\n              <Tag key={item.title} onClick={() => onSearchTagValue(item.title, 'tags')} className=\"photo-card-self__badge\">\n                {item.title}\n              </Tag>\n            );\n          }\n          return null;\n        })}\n        {tags.length > 3 && (\n          <Popover\n            placement=\"top\"\n            title=\"Remaining tags\"\n            content={(\n              <div>\n                {tags.map((item, i) => {\n                  if (i > 2) {\n                    return (\n                      <Tag key={item.title} onClick={() => onSearchTagValue(item.title, 'tags')} className=\"photo-card-self__badge\">\n                        {item.title}\n                      </Tag>\n                    );\n                  }\n                  return null;\n                })}\n              </div>\n            )}\n            trigger=\"click\"\n          >\n            <Tag className=\"photo-card-self__badge\">more tags...</Tag>\n          </Popover>\n        )}\n      </div>\n    </Card>\n  </div>\n));\n\nPhotoCard.propTypes = {\n  photoName: PropTypes.string,\n  photoDesc: PropTypes.string,\n  title: PropTypes.string,\n  tags: PropTypes.arrayOf(PropTypes.object),\n  userAvatar: PropTypes.string,\n  onSearchTagValue: PropTypes.func,\n  photoID: PropTypes.string,\n  userID: PropTypes.string,\n};\nPhotoCard.defaultProps = {\n  photoName: '',\n  photoDesc: '',\n  title: 'Noname',\n  tags: [],\n  userAvatar: '',\n  photoID: '',\n  userID: '',\n  onSearchTagValue: () => {},\n};\n\nexport default PhotoCard;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'antd';\nimport debounce from 'lodash/debounce';\nimport './index.css';\n\nconst InputSearch = Input.Search;\n\nclass Search extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    const { queryText } = this.props;\n    this.state = {\n      inputValue: queryText,\n    };\n  }\n\n  componentDidUpdate = (prevProps) => {\n    const { queryText } = this.props;\n    if (prevProps.queryText !== queryText) {\n      this.setState({\n        inputValue: queryText,\n      });\n    }\n  };\n\n  onChangeDebounced = debounce((value) => {\n    const { onChangeInputValue } = this.props;\n    onChangeInputValue(value);\n  }, 500)\n\n  submitSearch = () => {\n    const { inputValue } = this.state;\n    const { onSearchInputValue } = this.props;\n    if (inputValue) onSearchInputValue(inputValue);\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      inputValue: event.target.value,\n    }, () => {\n      const { inputValue } = this.state;\n      this.onChangeDebounced(inputValue);\n    });\n  };\n\n  render() {\n    const { inputValue } = this.state;\n    return (\n      <div className=\"search\">\n        <InputSearch\n          className=\"search__input\"\n          value={inputValue}\n          placeholder=\"Wallpapers\"\n          onChange={this.handleInputChange}\n          onPressEnter={this.submitSearch}\n          onSearch={this.submitSearch}\n          style={{ width: '100%' }}\n        />\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = {\n  queryText: PropTypes.string,\n  onSearchInputValue: PropTypes.func,\n  onChangeInputValue: PropTypes.func,\n};\nSearch.defaultProps = {\n  queryText: '',\n  onSearchInputValue: () => {},\n  onChangeInputValue: () => {},\n};\n\nexport default Search;\n","import React, { memo } from 'react';\nimport './Spinner.css';\n\nconst Spinner = memo(() => (\n  <div className=\"site-spinner\">\n    <div className=\"lds-ring\">\n      <div>&nbsp;</div>\n      <div>&nbsp;</div>\n      <div>&nbsp;</div>\n      <div>&nbsp;</div>\n    </div>\n  </div>\n));\n\nexport default Spinner;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Pagination } from 'antd';\nimport {\n  cardsPhotosRequestAction,\n  paginationChangeAction,\n  filterItemValueAction,\n  searchTextAction,\n  searchChangeInputValueAction,\n} from '../../actions';\nimport {\n  Search,\n  PhotoCard,\n  NavTop,\n  Spinner,\n} from '../../components';\nimport 'antd/dist/antd.css';\nimport './index.scss';\n\nclass Home extends PureComponent {\n  componentDidUpdate = (prevProps) => {\n    const { cardsData, cardsPhotosRequestAction: handleAction } = this.props;\n    if (prevProps.cardsData !== cardsData) handleAction(cardsData);\n  };\n\n  componentDidMount = () => {\n    this.handleCardsPhotos();\n  };\n\n  handleCardsPhotos = () => {\n    const { cardsData, cardsPhotosRequestAction: handleAction } = this.props;\n    handleAction(cardsData);\n  };\n\n  handlePaginationChange = (currentPage) => {\n    const { paginationChangeAction: handleAction } = this.props;\n    handleAction(currentPage);\n  };\n\n  handleFilterItemValue = (itemText, itemId) => {\n    const { filterItemValueAction: handleAction } = this.props;\n    handleAction(itemText, itemId);\n  };\n\n  handleSearchText = (text, tags) => {\n    const { searchTextAction: handleAction } = this.props;\n    handleAction(text, tags);\n  }\n\n  handleChangeInputValue = (text) => {\n    const { searchChangeInputValueAction: handleAction } = this.props;\n    handleAction(text);\n  }\n\n  render() {\n    const {\n      filters,\n      isListingLoading,\n      cards,\n      totalCards,\n      cardsData,\n      navTopItemActive,\n      photolistingRequestError,\n    } = this.props;\n    if (photolistingRequestError) return <div>Error loading photolisting</div>;\n    return (\n      <div className=\"App\">\n        { isListingLoading && (<Spinner className=\"spinner\" />)}\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <Search\n              onSearchInputValue={this.handleSearchText}\n              onChangeInputValue={this.handleChangeInputValue}\n              queryText={cardsData.query}\n            />\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <ul className=\"nav-top\">\n              {filters.map(item => (\n                <li key={item.id} className={`nav-top__item ${item.border ? 'nav-top__item_border-right' : ''}`}>\n                  <NavTop\n                    navTopItemActive={navTopItemActive}\n                    itemId={item.id}\n                    onFilterItemValue={this.handleFilterItemValue}\n                    key={item.id}\n                    label={item.label}\n                    filterValue={item.filterValue}\n                  />\n                </li>\n              ))\n              }\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-12\">\n            {!isListingLoading && (\n              <ul className=\"photo-list\">\n                {\n                cards.map(item => (\n                  <li key={item.id} className=\"photo-list__item pl-3\">\n                    <PhotoCard\n                      photoName={item.urls.regular}\n                      photoDesc={item.description}\n                      title={item.user.first_name}\n                      tags={item.tags}\n                      photoID={item.id}\n                      userID={item.user.username}\n                      userAvatar={item.user.profile_image.small}\n                      onSearchTagValue={this.handleSearchText}\n                    />\n                  </li>\n                ))\n                }\n              </ul>\n            )\n            }\n            {!totalCards && (<h2 className=\"cards__text-empty pl-3\">No images were found for your request. Try to find more.</h2>)}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 pagination\">\n\n            {totalCards > cardsData.per_page && (\n              <Pagination\n                className=\"ml-3\"\n                showSizeChanger\n                onChange={this.handlePaginationChange}\n                current={cardsData.page}\n                defaultCurrent={1}\n                total={totalCards}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  cardsPhotosRequestAction: PropTypes.func,\n  paginationChangeAction: PropTypes.func,\n  filterItemValueAction: PropTypes.func,\n  searchTextAction: PropTypes.func,\n  searchChangeInputValueAction: PropTypes.func,\n  filters: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    label: PropTypes.string,\n    filterValue: PropTypes.string,\n  })),\n  cardsData: PropTypes.shape({\n    query: PropTypes.string,\n    page: PropTypes.number,\n    per_page: PropTypes.number,\n  }),\n  totalCards: PropTypes.number,\n  navTopItemActive: PropTypes.number,\n  cards: PropTypes.arrayOf(PropTypes.object),\n  isListingLoading: PropTypes.bool,\n  photolistingRequestError: PropTypes.bool,\n};\nHome.defaultProps = {\n  cardsPhotosRequestAction: () => {},\n  paginationChangeAction: () => {},\n  filterItemValueAction: () => {},\n  searchTextAction: () => {},\n  searchChangeInputValueAction: () => {},\n  filters: [],\n  isListingLoading: false,\n  cards: [],\n  cardsData: {\n    query: 'wallpapers',\n    page: 1,\n    per_page: 6,\n  },\n  totalCards: 10,\n  navTopItemActive: 2,\n  photolistingRequestError: false,\n};\n\nconst mapStateToProps = (state) => {\n  const { photolisting } = state;\n  return photolisting;\n};\n\nconst mapDispatchToProps = ({\n  cardsPhotosRequestAction,\n  paginationChangeAction,\n  filterItemValueAction,\n  searchTextAction,\n  searchChangeInputValueAction,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Home);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Card } from 'antd';\nimport { Spinner } from '../../components';\nimport { photoRequestAction } from '../../actions';\nimport './photo.css';\n\nconst { Meta } = Card;\nconst Photo = memo(({\n  match,\n  photoRequestAction: handleAction,\n  isPhotoLoading,\n  requestError,\n  photoSrc,\n  photoDesc,\n  userNic,\n  userPortfolioUrl,\n}) => {\n  console.log(\"1:: \", match)\n\n  handleAction(match);\n  return (\n    <div className=\"photo-container photo\">\n      { isPhotoLoading && (<Spinner className=\"spinner\" />)}\n      { !isPhotoLoading && !requestError && (\n        <Card\n          style={{ width: '100%' }}\n          cover={(\n            <img\n              className=\"photo__img\"\n              alt=\"example\"\n              src={photoSrc}\n            />\n          )}\n        >\n          <Meta className=\"photo__desc\" title={`${photoDesc || 'No title'}`} />\n          <Link to={`/users/${userNic}`}>\n            <p className=\"photo__autor-page-link\">\n              { 'Autor\\'s page link' }\n            </p>\n          </Link>\n          <a className=\"photo__autor-link\" href={userPortfolioUrl}>{ 'Autor\\'s portfolio link' }</a>\n        </Card>\n      )}\n      { !isPhotoLoading && requestError && (\n        <p>\n          Такое фото не найдено.\n          {' '}\n          <Link to=\"/\">\n            Перейти на главную.\n          </Link>\n        </p>\n      )}\n    </div>\n  );\n});\n// class Photo extends PureComponent {\n//   componentDidMount = () => {\n//     const { match, photoRequestAction: handleAction } = this.props;\n//     handleAction(match);\n//   };\n\n//   render() {\n//     const {\n//       isPhotoLoading,\n//       photoSrc,\n//       userPortfolioUrl,\n//       userNic,\n//       photoDesc,\n//       requestError,\n//     } = this.props;\n\n//     return (\n//       <div className=\"photo-container photo\">\n//         { isPhotoLoading && (<Spinner className=\"spinner\" />)}\n//         { !isPhotoLoading && !requestError && (\n//           <Card\n//             style={{ width: '100%' }}\n//             cover={(\n//               <img\n//                 className=\"photo__img\"\n//                 alt=\"example\"\n//                 src={photoSrc}\n//               />\n//             )}\n//           >\n//             <Meta className=\"photo__desc\" title={`${photoDesc || 'No title'}`} />\n//             <Link to={`/users/${userNic}`}>\n//               <p className=\"photo__autor-page-link\">\n//                 { 'Autor\\'s page link' }\n//               </p>\n//             </Link>\n//             <a className=\"photo__autor-link\" href={userPortfolioUrl}>{ 'Autor\\'s portfolio link' }</a>\n//           </Card>\n//         )}\n//         { !isPhotoLoading && requestError && (\n//           <p>\n//             Такое фото не найдено.\n//             {' '}\n//             <Link to=\"/\">\n//               Перейти на главную.\n//             </Link>\n//           </p>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\nPhoto.propTypes = {\n  photoRequestAction: PropTypes.func,\n  isPhotoLoading: PropTypes.bool,\n  photoSrc: PropTypes.string,\n  userPortfolioUrl: PropTypes.string,\n  userNic: PropTypes.string,\n  photoDesc: PropTypes.string,\n  requestError: PropTypes.bool,\n  match: PropTypes.shape({\n    prop: PropTypes.string,\n  }),\n  history: PropTypes.shape({\n    prop: PropTypes.string,\n  }),\n};\nPhoto.defaultProps = {\n  photoRequestAction: () => {},\n  isPhotoLoading: true,\n  photoSrc: null,\n  userNic: 'UserNic',\n  userPortfolioUrl: '',\n  photoDesc: '',\n  requestError: false,\n  match: {},\n  history: {},\n};\n\nconst mapStateToProps = (state) => {\n  const { photo } = state;\n  return photo;\n};\n\nconst mapDispatchToProps = ({\n  photoRequestAction,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Photo);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { loadingRequestAction, logoutAction } from '../../actions';\nimport { Spinner } from '../../components';\nimport './index.scss';\n\nclass Profile extends PureComponent {\n  componentDidMount = () => {\n    const { profilePhotoUrl } = this.props;\n    if (!profilePhotoUrl) {\n      const { loadingRequestAction: handleAction } = this.props;\n      handleAction(window.document.location);\n    }\n  }\n\n  handleLoguotProfile = () => {\n    const { history, logoutAction: handleAction } = this.props;\n    handleAction();\n    window.localStorage.clear();\n    history.push('/');\n  };\n\n  render() {\n    const {\n      fetching,\n      loginError,\n      profilePhotoUrl,\n      profileFullName,\n      profileEmail,\n      profileName,\n    } = this.props;\n    return (\n      <div className=\"profile\">\n        { fetching && (<Spinner className=\"spinner\" />)}\n        { !fetching && !loginError && (\n          <div className=\"profile__content profile-content\">\n            <img className=\"profile-content__avatar\" src={profilePhotoUrl} alt=\"Profile avatar\" />\n            <div className=\"profile-content__title-wrap\">\n              <h2 className=\"profile-content__title\">\n                {profileFullName}\n              </h2>\n              <p>{profileEmail}</p>\n              <p className=\"profile-content__text\">\n                Download free, beautiful high-quality photos curated by\n                {' '}\n                {\n                  profileName\n                }\n              </p>\n            </div>\n          </div>\n        )}\n        { !fetching && loginError && (\n          <p>\n            При авторизации возникла ошибка. Попробуйте авторизоваться позже!\n            {' '}\n            <Link to=\"/\">\n              Перейти на главную.\n            </Link>\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nProfile.propTypes = {\n  logoutAction: PropTypes.func,\n  loadingRequestAction: PropTypes.func,\n  profilePhotoUrl: PropTypes.string,\n  profileFullName: PropTypes.string,\n  profileName: PropTypes.string,\n  profileEmail: PropTypes.string,\n  fetching: PropTypes.bool,\n  loginError: PropTypes.bool,\n  history: PropTypes.shape({\n    profilePhotoUrl: PropTypes.string,\n  }),\n};\nProfile.defaultProps = {\n  logoutAction: () => {},\n  loadingRequestAction: () => {},\n  profilePhotoUrl: '',\n  profileFullName: '',\n  profileName: '',\n  profileEmail: '',\n  fetching: false,\n  loginError: false,\n  history: {},\n};\n\nconst mapStateToProps = (state) => {\n  const { login } = state;\n  return login;\n};\n\nconst mapDispatchToProps = ({\n  loadingRequestAction,\n  logoutAction,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Profile);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Row,\n  Col,\n  Avatar,\n  Tabs,\n} from 'antd';\nimport axios from 'axios';\nimport get from 'lodash/get';\nimport {\n  Spinner,\n  UserLikesPhotos,\n  UserStatistic,\n  UserPhotoListing,\n} from '../../components';\nimport { URL_FOR_USER_QUERY } from '../../constants';\nimport './user.css';\n\nconst { TabPane } = Tabs;\n\nclass User extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isListingLoading: false,\n      userPhoto: '',\n      userFirstPhoto: '',\n    };\n  }\n\n  componentDidMount = () => {\n    this.handleUserQuery();\n  };\n\n  handleUserQuery = () => {\n    const { match, history } = this.props;\n    this.setState({ isListingLoading: true });\n    const API_URL = URL_FOR_USER_QUERY(match);\n    axios.get(API_URL)\n      .then((res) => {\n        const userPhoto = get(res, 'data.profile_image.large') || 'No User Photo';\n        const userFirstPhoto = get(res, 'data.photos[0].urls.regular') || 'No Photo';\n\n        this.setState({\n          isListingLoading: false,\n          userPhoto,\n          userFirstPhoto,\n        });\n      })\n      .catch(() => {\n        history.push('/');\n      });\n  }\n\n  render() {\n    const {\n      isListingLoading,\n      userPhoto,\n      userFirstPhoto,\n    } = this.state;\n\n    const { match } = this.props;\n    console.log(\"6: \", this.props)\n    return (\n      <div className=\"user-container\">\n        { isListingLoading && (<Spinner />)}\n\n        <Row style={{ display: 'flex', justifyContent: 'center' }}>\n          <Col>\n            <img\n              className=\"user-card__first-img\"\n              alt=\"example\"\n              src={userFirstPhoto}\n            />\n            <div className=\"user-card__photo-wrap\">\n              <Avatar size={150} src={userPhoto} />\n            </div>\n          </Col>\n        </Row>\n        <Row style={{ display: 'flex', justifyContent: 'center', overflow: 'hidden' }}>\n          <Col>\n            <div className=\"user-tabs\">\n              <Tabs className=\"user-tabs__item\" defaultActiveKey=\"1\">\n                <TabPane tab=\"My photos\" key=\"1\" className=\"user-tabs__pane\">\n                  <UserPhotoListing userId={match.params.id} />\n                </TabPane>\n                <TabPane tab=\"My likes\" key=\"2\" className=\"user-tabs__pane\">\n                  <UserLikesPhotos userId={match.params.id} />\n                </TabPane>\n                <TabPane tab=\"My statistic\" key=\"3\" className=\"user-tabs__pane\">\n                  <UserStatistic userId={match.params.id} />\n                </TabPane>\n              </Tabs>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nUser.propTypes = {\n  history: PropTypes.shape({\n    prop: PropTypes.string,\n  }),\n  match: PropTypes.shape({\n    prop: PropTypes.string,\n  }),\n};\nUser.defaultProps = {\n  history: {},\n  match: {},\n};\nexport default User;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col, Pagination } from 'antd';\nimport axios from 'axios';\nimport get from 'lodash/get';\nimport { Spinner, PhotoCard } from '../../components';\nimport { URL_FOR_USER_LIKES_QUERY } from '../../constants';\nimport './index.css';\n\nclass UserLikesPhotos extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isListingLoading: false,\n      cards: [],\n      totalCards: 10,\n      page: 1,\n      per_page: 6,\n    };\n  }\n\n  componentDidMount = () => {\n    this.handleUserLikesPhotosQuery();\n  };\n\n  handlePaginationChange = (current) => {\n    this.setState({\n      page: current,\n      per_page: 6,\n    }, this.handleUserLikesPhotosQuery);\n  };\n\n  handleUserLikesPhotosQuery = () => {\n    const { history, userId } = this.props;\n    const { page, per_page: perPage } = this.state;\n    this.setState({ isListingLoading: true });\n    const API_URL = URL_FOR_USER_LIKES_QUERY(userId);\n    axios.get(API_URL, {\n      params: {\n        page,\n        perPage,\n        client_id: process.env.REACT_APP_UNSPLASH_API_KEY,\n      },\n    }).then((res) => {\n      const cards = get(res, 'data') || [];\n      const totalCards = parseInt(get(res, 'headers[\"x-total\"]'), 10) || 10;\n      this.setState({\n        cards,\n        isListingLoading: false,\n        totalCards,\n      });\n    })\n      .catch(() => {\n        history.push('/');\n      });\n  }\n\n  render() {\n    const {\n      isListingLoading,\n      cards,\n      totalCards,\n      page,\n      per_page: perPage,\n    } = this.state;\n    return (\n      <div>\n        { isListingLoading && (<Spinner />)}\n        <div>\n          <Row justify=\"center\" style={{ margin: '20px 0' }}>\n            <Col span={24}>\n              {!isListingLoading && (\n                <ul className=\"photo-list user-photos\">\n                  {cards.map(item => (\n                    <li key={item.id} className=\"photo-list__item pl-3\">\n                      <PhotoCard\n                        photoName={item.urls.regular}\n                        title=\"\"\n                        tags={item.photo_tags}\n                        photoID={item.id}\n                        userID={item.user.username}\n                        userAvatar={item.user.profile_image.small}\n                        onSearchTagValue={this.handleSearchText}\n                      />\n                    </li>\n                  ))\n                  }\n                </ul>\n              )}\n            </Col>\n          </Row>\n          <Row justify=\"center\" style={{ display: 'flex', justifyContent: 'center' }}>\n            <Col style={{ display: 'flex', justifyContent: 'center' }}>\n              {totalCards > perPage && (\n                <Pagination\n                  className=\"ml-3 mb-5\"\n                  onChange={this.handlePaginationChange}\n                  showSizeChanger\n                  current={page}\n                  defaultCurrent={1}\n                  total={totalCards}\n                />\n              )}\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nUserLikesPhotos.propTypes = {\n  history: PropTypes.shape({\n    prop: PropTypes.string,\n  }),\n  userId: PropTypes.string,\n};\nUserLikesPhotos.defaultProps = {\n  history: {},\n  userId: '',\n};\nexport default UserLikesPhotos;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col, Pagination } from 'antd';\nimport axios from 'axios';\nimport get from 'lodash/get';\nimport { Spinner, PhotoCard } from '../../components';\nimport { URL_FOR_USER_PHOTO_LISTING_QUERY } from '../../constants';\nimport './index.css';\n\nclass UserPhotoListing extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isListingLoading: false,\n      cards: [],\n      totalCards: 10,\n      page: 1,\n      per_page: 6,\n    };\n  }\n\n  componentDidMount = () => {\n    this.handleUserPhotoListingQuery();\n  };\n\n  handlePaginationChange = (current) => {\n    this.setState({\n      page: current,\n      per_page: 6,\n    }, this.handleUserPhotoListingQuery);\n  };\n\n  handleUserPhotoListingQuery = () => {\n    const { history, userId } = this.props;\n    const { page, per_page: perPage } = this.state;\n    this.setState({ isListingLoading: true });\n    const API_URL = URL_FOR_USER_PHOTO_LISTING_QUERY(userId);\n    axios.get(API_URL, {\n      params: {\n        page,\n        perPage,\n        client_id: process.env.REACT_APP_UNSPLASH_API_KEY,\n      },\n    }).then((res) => {\n      const cards = get(res, 'data') || [];\n      const totalCards = parseInt(get(res, 'headers[\"x-total\"]'), 10) || 10;\n      this.setState({\n        cards,\n        isListingLoading: false,\n        totalCards,\n      });\n    })\n      .catch(() => {\n        history.push('/');\n      });\n  }\n\n  render() {\n    const {\n      isListingLoading,\n      cards,\n      totalCards,\n      page,\n      per_page: perPage,\n    } = this.state;\n    return (\n      <div>\n        { isListingLoading && (<Spinner className=\"spinner\" />)}\n        <div>\n          <Row justify=\"center\" style={{ margin: '20px 0' }}>\n            <Col span={24}>\n              {!isListingLoading && (\n                <ul className=\"photo-list user-photos \">\n                  {\n                    cards.map(item => (\n                      <li key={item.id} className=\"photo-list__item pl-3\">\n                        <PhotoCard\n                          photoName={item.urls.regular}\n                          title=\"\"\n                          tags={item.photo_tags}\n                          photoID={item.id}\n                          userID={item.user.username}\n                          userAvatar={item.user.profile_image.small}\n                          onSearchTagValue={this.handleSearchText}\n                        />\n                      </li>\n                    ))\n                  }\n                </ul>\n              )}\n            </Col>\n          </Row>\n          <Row justify=\"center\" style={{ display: 'flex', justifyContent: 'center' }}>\n            <Col style={{ display: 'flex', justifyContent: 'center' }}>\n              {totalCards > perPage && (\n                <Pagination\n                  className=\"ml-3 mb-5\"\n                  onChange={this.handlePaginationChange}\n                  showSizeChanger\n                  current={page}\n                  defaultCurrent={1}\n                  total={totalCards}\n                />\n              )}\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nUserPhotoListing.propTypes = {\n  history: PropTypes.shape({\n    prop: PropTypes.string,\n  }),\n  userId: PropTypes.string,\n};\nUserPhotoListing.defaultProps = {\n  history: {},\n  userId: '',\n};\nexport default UserPhotoListing;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Highcharts from 'react-highcharts';\nimport { Spinner } from '../../components';\nimport { userStatistingRequestAction } from '../../actions';\nimport './index.css';\n\nclass UserStatistic extends PureComponent {\n  componentDidMount = () => {\n    const { userId } = this.props;\n    const { userStatistingRequestAction: handleAction } = this.props;\n    handleAction(userId);\n  }\n\n  render() {\n    const { isListingLoading, highchartsConfigs, requestError } = this.props;\n    return (\n      <div className=\"user-statistic\">\n        { isListingLoading && (<Spinner className=\"spinner\" />)}\n        { !isListingLoading && !requestError && (\n        <div className=\"user-statistic__charts\">\n          <div className=\"user-statistic__chart-wrap\">\n            <Highcharts key=\"1\" className=\"user-statistic__chart\" config={highchartsConfigs.highchartsDownloadsConfig} />\n          </div>\n\n          <div className=\"user-statistic__chart-wrap\">\n            <Highcharts key=\"2\" className=\"user-statistic__chart\" config={highchartsConfigs.highchartsViewsConfig} />\n          </div>\n\n          <div className=\"user-statistic__chart-wrap\">\n            <Highcharts key=\"3\" className=\"user-statistic__chart user-statistic-chart\" config={highchartsConfigs.highchartsLikesConfig} />\n          </div>\n        </div>\n        )}\n        { !isListingLoading && requestError && (\n          <p>\n            При запросе возникла ошибка. Попробуйте сделать запрос позже!\n            {' '}\n            <Link to=\"/\">\n              Перейти на главную.\n            </Link>\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nUserStatistic.propTypes = {\n  userStatistingRequestAction: PropTypes.func,\n  isListingLoading: PropTypes.bool,\n  userId: PropTypes.string,\n  highchartsConfigs: PropTypes.shape({\n    highchartsDownloadsConfig: PropTypes.shape({}),\n    highchartsViewsConfig: PropTypes.shape({}),\n    highchartsLikesConfig: PropTypes.shape({}),\n  }),\n  requestError: PropTypes.bool,\n};\nUserStatistic.defaultProps = {\n  userStatistingRequestAction: () => {},\n  isListingLoading: false,\n  userId: '',\n  highchartsConfigs: {\n    highchartsDownloadsConfig: {},\n    highchartsViewsConfig: {},\n    highchartsLikesConfig: {},\n  },\n  requestError: false,\n};\n\nconst mapStateToProps = (state) => {\n  const { userstatistic } = state;\n  return userstatistic;\n};\n\nconst mapDispatchToProps = ({\n  userStatistingRequestAction,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(UserStatistic);\n","import React, { memo } from 'react';\nimport { LastLocationProvider } from 'react-router-last-location';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport { Row, Col, Layout } from 'antd';\nimport {\n  Home,\n  Photo,\n  User,\n  UserPhotoListing,\n  Profile,\n  HeaderApp,\n} from '../components';\nimport './index.scss';\n\nconst Main = memo(() => (\n  <BrowserRouter basename={process.env.PUBLIC_URL || '/'}>\n    <LastLocationProvider>\n      <Row className=\"header-row\" style={{ margin: '0px 0 30px' }}>\n        <Col>\n          <Layout className=\"user-layout\">\n            <HeaderApp />\n          </Layout>\n        </Col>\n      </Row>\n      <div className=\"page\">\n        <Switch>\n          <Route exact path=\"/\" component={props => <Home {...props} />} />\n          <Route path=\"/users/:id/photos\" component={props => <UserPhotoListing {...props} />} />\n          <Route path=\"/photo/:id\" component={props => <Photo {...props} />} />\n          <Route path=\"/profile\" component={props => <Profile {...props} />} />\n          <Route path=\"/users/:id\" component={props => <User {...props} />} />\n        </Switch>\n      </div>\n    </LastLocationProvider>\n  </BrowserRouter>\n));\n\nexport default Main;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n/* eslint no-param-reassign: \"error\" */\n/* eslint-disable no-console */\nfunction registerValidSW(swUrl, config) {\n  window.navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (window.navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  window.fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        window.navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in window.navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        window.navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in window.navigator) {\n    window.navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import filters from './filters';\n\nconst initialStore = {\n  login: {\n    profilePhotoUrl: '',\n    profileFullName: '',\n    profileName: '',\n    profileEmail: '',\n    fetching: false,\n    loginError: false,\n  },\n  photolisting: {\n    filters,\n    isListingLoading: false,\n    cards: [],\n    totalCards: 10,\n    navTopItemActive: 2,\n    cardsData: {\n      query: 'wallpapers',\n      page: 1,\n      per_page: 6,\n    },\n    photolistingRequestError: false,\n  },\n  userstatistic: {\n    isListingLoading: false,\n    highchartsConfigs: {\n      highchartsDownloadsConfig: {},\n      highchartsViewsConfig: {},\n      highchartsLikesConfig: {},\n    },\n    requestError: false,\n  },\n  photo: {\n    isPhotoLoading: true,\n    photoSrc: null,\n    userNic: 'UserNic',\n    userPortfolioUrl: '',\n    photoDesc: '',\n    requestError: false,\n  },\n};\nexport default initialStore;\n","const filters = [\n  {\n    id: 0,\n    label: 'Editorial',\n    filterValue: 'editorial',\n  },\n  {\n    id: 1,\n    label: 'Following',\n    filterValue: 'following',\n    border: true,\n  },\n  {\n    id: 2,\n    label: 'Wallpapers',\n    filterValue: 'wallpapers',\n  },\n  {\n    id: 3,\n    label: 'Textures & Patterns',\n    filterValue: 'textures',\n  },\n  {\n    id: 4,\n    label: 'Nature',\n    filterValue: 'nature',\n  },\n  {\n    id: 5,\n    label: 'Current Events',\n    filterValue: 'events',\n  },\n  {\n    id: 6,\n    label: 'Architecture',\n    filterValue: 'architecture',\n  },\n  {\n    id: 7,\n    label: 'Business & Work',\n    filterValue: 'business',\n  },\n  {\n    id: 8,\n    label: 'Animals',\n    filterValue: 'animals',\n  },\n  {\n    id: 9,\n    label: 'Travel',\n    filterValue: 'travel',\n  },\n  {\n    id: 10,\n    label: 'Fashion',\n    filterValue: 'fashion',\n  },\n  {\n    id: 11,\n    label: 'Food & Drink',\n    filterValue: 'food-drink',\n  },\n  {\n    id: 12,\n    label: 'Spirituality',\n    filterValue: 'spirituality',\n  },\n  {\n    id: 13,\n    label: 'Experimental',\n    filterValue: 'experimental',\n  },\n  {\n    id: 14,\n    label: 'People',\n    filterValue: 'people',\n  },\n  {\n    id: 15,\n    label: 'Health',\n    filterValue: 'health',\n  },\n  {\n    id: 16,\n    label: 'Arts & Culture',\n    filterValue: 'arts-culture',\n  },\n];\nexport default filters;\n","import initialStore from '../initialStore';\n\nconst login = (state = initialStore, action) => {\n  switch (action.type) {\n    case 'LOGIN_FETCHING':\n      return {\n        ...state,\n        fetching: true,\n        loginError: false,\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        ...action.data,\n        fetching: false,\n        loginError: false,\n      };\n    case 'LOGIN_ERROR':\n      return {\n        ...state,\n        fetching: false,\n        loginError: true,\n      };\n    case 'LOGOUT':\n      return initialStore.login;\n    default:\n      return state;\n  }\n};\n\nexport default login;\n","import initialStore from '../initialStore';\n\nconst photolisting = (state = initialStore, action) => {\n  switch (action.type) {\n    case 'CARDS_PHOTOS_FETCHING':\n      return {\n        ...state,\n        isListingLoading: true,\n      };\n    case 'CARDS_PHOTOS_REQUEST_SUCCESS':\n      return {\n        ...state,\n        ...action.responceObj,\n        photolistingRequestError: false,\n      };\n    case 'PAGINATION_CHANGE':\n      return {\n        ...state,\n        cardsData: {\n          ...state.cardsData,\n          page: action.page,\n        },\n      };\n    case 'FILTER_ITEM_VALUE':\n      return {\n        ...state,\n        navTopItemActive: action.itemId,\n        cardsData: {\n          ...state.cardsData,\n          page: 1,\n          query: action.itemText,\n        },\n      };\n    case 'SEARCH_TEXT':\n      return {\n        ...state,\n        navTopItemActive: action.tags ? -2 : state.navTopItemActive,\n        cardsData: {\n          ...state.cardsData,\n          page: 1,\n          query: action.text,\n        },\n      };\n    case 'SEARCH_TEXT_CHANGE_INPUT_VALUE':\n      return {\n        ...state,\n        cardsData: {\n          ...state.cardsData,\n          query: action.text,\n        },\n      };\n    case 'CARDS_PHOTOS_REQUEST_ERROR':\n      return {\n        ...state,\n        isListingLoading: false,\n        photolistingRequestError: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default photolisting;\n","import initialStore from '../initialStore';\n\nconst userstatistic = (state = initialStore, action) => {\n  switch (action.type) {\n    case 'USER_STATISTIC_FETCHING':\n      return {\n        ...state,\n        isListingLoading: true,\n      };\n    case 'USER_STATISTIC_REQUEST_SUCCESS':\n      return {\n        ...state,\n        highchartsConfigs: action.highchartsConfigsObject,\n        isListingLoading: false,\n        requestError: false,\n      };\n    case 'USER_STATISTIC_REQUEST_ERROR':\n      return {\n        ...state,\n        isListingLoading: false,\n        requestError: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userstatistic;\n","import initialStore from '../initialStore';\n\nconst photo = (state = initialStore, action) => {\n  switch (action.type) {\n    case 'PHOTO_FETCHING':\n      return {\n        ...state,\n        isPhotoLoading: true,\n      };\n    case 'PHOTO_REQUEST_SUCCESS':\n      return {\n        ...state,\n        ...action.responceObj,\n        isPhotoLoading: false,\n        requestError: false,\n      };\n    case 'PHOTO_REQUEST_ERROR':\n      return {\n        ...state,\n        isPhotoLoading: false,\n        requestError: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default photo;","import { combineReducers } from 'redux';\nimport login from './login';\nimport photolisting from './photolisting';\nimport userstatistic from './userstatistic';\nimport photo from './photo';\n\nconst allRedusers = combineReducers({\n  login,\n  photolisting,\n  userstatistic,\n  photo,\n});\n\nexport default allRedusers;\n","import axios from 'axios';\nimport { put } from 'redux-saga/effects';\nimport get from 'lodash/get';\nimport { URL_FOR_PROFILE_ME, URL_FOR_TOKEN, URL_FOR_AVATAR_PLACEHOLDER } from '../constants';\n\nexport function* loginAfterToken(token) {\n  if (token) {\n    try {\n      const headers = {\n        Authorization: `Bearer ${token}`,\n      };\n      const response = yield axios.get(URL_FOR_PROFILE_ME, { headers });\n      const data = {\n        profilePhotoUrl: get(response, 'data.profile_image.large') || URL_FOR_AVATAR_PLACEHOLDER,\n        profileName: get(response, 'data.first_name') || 'No first name',\n        profileFullName: get(response, 'data.name') || 'No name',\n        profileEmail: get(response, 'data.email') || 'No email',\n      };\n\n      yield put({ type: 'LOGIN_SUCCESS', data });\n    } catch (error) {\n      yield put({ type: 'LOGIN_ERROR' });\n    }\n  }\n}\nexport function* loginSaga(action) {\n  const tokenFirst = window.localStorage.getItem('token');\n  if (tokenFirst) {\n    yield loginAfterToken(tokenFirst);\n  } else {\n    const code = action.location.search.split('?code=')[1];\n    if (code) {\n      try {\n        const axiosRequestForToken = {\n          url: URL_FOR_TOKEN,\n          body: {\n            redirect_uri: process.env.REACT_APP_UNSPLASH_API_REDIRECT_URI,\n            client_secret: process.env.REACT_APP_UNSPLASH_API_CLIENT_SECRET,\n            code,\n            grant_type: 'authorization_code',\n            client_id: process.env.REACT_APP_UNSPLASH_API_KEY,\n          },\n        };\n\n        const response = yield axios.post(axiosRequestForToken.url, axiosRequestForToken.body);\n        const token = get(response, 'data.access_token') || false;\n        window.localStorage.clear();\n        window.localStorage.setItem('token', token);\n        yield loginAfterToken(token);\n      } catch (error) {\n        yield put({ type: 'LOGIN_ERROR' });\n      }\n    } else {\n      yield put({ type: 'LOGIN_ERROR' });\n    }\n  }\n}\n","import axios from 'axios';\nimport { put } from 'redux-saga/effects';\nimport get from 'lodash/get';\nimport { URL_FOR_CARDS_PHOTOS } from '../constants';\n\nexport default function* cardsPhotosRequestSaga(action) {\n  const { cardsData } = action;\n  if (cardsData) {\n    try {\n      const axiosRequestForcardsPhotos = {\n        url: URL_FOR_CARDS_PHOTOS,\n        params: {\n          ...cardsData,\n          client_id: process.env.REACT_APP_UNSPLASH_API_KEY,\n        },\n      };\n      const response = yield axios.get(axiosRequestForcardsPhotos.url, {\n        params: axiosRequestForcardsPhotos.params,\n      });\n\n      const responceObj = {\n        cards: get(response, 'data.results') || [],\n        isListingLoading: false,\n        totalCards: get(response, 'data.total') || 10,\n      };\n\n      yield put({ type: 'CARDS_PHOTOS_REQUEST_SUCCESS', responceObj });\n    } catch (error) {\n      yield put({ type: 'CARDS_PHOTOS_REQUEST_ERROR', error });\n    }\n  }\n}\n","import axios from 'axios';\nimport moment from 'moment';\nimport 'moment-timezone';\nimport { put } from 'redux-saga/effects';\nimport get from 'lodash/get';\nimport {\n  URL_FOR_USER_STATISTIC,\n  INITIONAL_CHARTS_CONFIGS,\n  CHARTS_CATEGORIES,\n  CHART_CONFIG,\n} from '../constants';\n\nconst createCharts = (config) => {\n  const configArr = Object.entries(config);\n  const newObj = {};\n\n  configArr.forEach((item) => {\n    newObj[item[0]] = {\n      chart: {\n        type: 'area',\n      },\n      colors: [item[1].colors],\n      title: {\n        text: item[1].title,\n      },\n      xAxis: {\n        categories: CHARTS_CATEGORIES,\n      },\n      plotOptions: {\n        area: {\n          stacking: 'normal',\n          lineColor: item[1].colors,\n          lineWidth: 1,\n          marker: {\n            lineWidth: 6,\n            lineColor: item[1].colors,\n          },\n        },\n      },\n      series: [\n        {\n          name: item[1].seriesName,\n        },\n      ],\n      ...CHART_CONFIG,\n    };\n  });\n  return newObj;\n};\n\nexport default function* userStatisticRequestSaga(action) {\n  const { userId } = action;\n  if (userId) {\n    try {\n      const highchartsConfigs = createCharts(INITIONAL_CHARTS_CONFIGS);\n\n      const axiosRequestUserStatistic = {\n        url: URL_FOR_USER_STATISTIC(userId),\n        params: {\n          client_id: process.env.REACT_APP_UNSPLASH_API_KEY,\n        },\n      };\n      const res = yield axios.get(axiosRequestUserStatistic.url, {\n        params: axiosRequestUserStatistic.params,\n      });\n\n      const highchartsDownloadsConfigData = get(res, 'data.downloads.historical.values') || [];\n      const highchartsViewsConfigData = get(res, 'data.views.historical.values') || [];\n      const highchartsLikesConfigData = get(res, 'data.likes.historical.values') || [];\n\n      const highchartsConfigsObject = {\n        highchartsDownloadsConfig: {\n          ...highchartsConfigs.highchartsDownloadsConfig,\n          xAxis: {\n            categories: highchartsDownloadsConfigData.map(item => moment(item.date).format('DD MMMM YYYY')),\n          },\n          series: [\n            {\n              ...highchartsConfigs.highchartsDownloadsConfig.series[0],\n              data: highchartsDownloadsConfigData.map(item => item.value),\n            },\n          ],\n        },\n        highchartsViewsConfig: {\n          ...highchartsConfigs.highchartsViewsConfig,\n          xAxis: {\n            categories: highchartsViewsConfigData.map(item => moment(item.date).format('DD MMMM YYYY')),\n          },\n          series: [\n            {\n              ...highchartsConfigs.highchartsViewsConfig.series[0],\n              data: highchartsViewsConfigData.map(item => item.value),\n            },\n          ],\n        },\n        highchartsLikesConfig: {\n          ...highchartsConfigs.highchartsLikesConfig,\n          xAxis: {\n            categories: highchartsLikesConfigData.map(item => moment(item.date).format('DD MMMM YYYY')),\n          },\n          series: [\n            {\n              ...highchartsConfigs.highchartsLikesConfig.series[0],\n              data: highchartsLikesConfigData.map(item => item.value),\n            },\n          ],\n        },\n      };\n      yield put({ type: 'USER_STATISTIC_REQUEST_SUCCESS', highchartsConfigsObject });\n    } catch (error) {\n      yield put({ type: 'USER_STATISTIC_REQUEST_ERROR', error });\n    }\n  } else {\n    yield put({ type: 'USER_STATISTIC_REQUEST_ERROR' });\n  }\n}\n","import axios from 'axios';\nimport { put } from 'redux-saga/effects';\nimport get from 'lodash/get';\nimport { URL_FOR_PHOTO_QUERY } from '../constants';\n\nexport default function* photoRequestSaga(action) {\n  const { match } = action;\n  if (match) {\n    try {\n      const res = yield axios.get(URL_FOR_PHOTO_QUERY(match));\n      const responceObj = {\n        photoSrc: get(res, 'data.urls.full') || '',\n        userNic: get(res, 'data.user.username') || 'No Name',\n        userPortfolioUrl: get(res, 'data.user.portfolio_url') || '',\n        photoDesc: get(res, 'data.description') || 'No Description',\n      };\n      yield put({ type: 'PHOTO_REQUEST_SUCCESS', responceObj });\n    } catch (error) {\n      yield put({ type: 'PHOTO_REQUEST_ERROR', error });\n    }\n  }\n}\n","import { takeEvery, all } from 'redux-saga/effects';\nimport { loginSaga } from './loginSaga';\nimport cardsPhotosRequestSaga from './photolistingSaga';\nimport userStatisticRequestSaga from './userstatistic';\nimport photoRequestSaga from './photo';\n\nexport default function* rootSaga() {\n  yield all([\n    yield takeEvery('LOGIN_FETCHING', loginSaga),\n    yield takeEvery('CARDS_PHOTOS_FETCHING', cardsPhotosRequestSaga),\n    yield takeEvery('USER_STATISTIC_FETCHING', userStatisticRequestSaga),\n    yield takeEvery('PHOTO_FETCHING', photoRequestSaga),\n  ]);\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport Main from './router';\nimport * as serviceWorker from './serviceWorker';\nimport allRedusers from './reducers';\nimport initialStore from './initialStore';\nimport rootSaga from './sagas';\nimport './index.scss';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware];\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nconst store = createStore(allRedusers, initialStore, applyMiddleware(...middleware));\n\nsagaMiddleware.run(rootSaga, [555]);\n\nrender(\n  <Provider store={store}>\n    <Main />\n  </Provider>,\n  window.document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}