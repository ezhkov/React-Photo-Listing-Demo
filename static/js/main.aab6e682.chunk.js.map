{"version":3,"sources":["components/ButtonBack/index.js","constants/api.js","constants/chart.js","actions/index.js","components/HeaderApp/index.js","components/NavTop/index.js","components/PhotoCard/index.js","components/Search/index.js","components/Spinner/index.js","components/SpinnerPhoto/index.js","components/InfoPhotoModal/infoPhotoModalContent.js","components/InfoPhotoModal/index.js","components/Error/index.js","pages/Home/index.js","pages/Photo/getPhotoSize.js","pages/Photo/index.js","pages/Profile/index.js","pages/User/index.js","pages/UserLikesPhotos/index.js","pages/UserPhotoListing/index.js","pages/UserStatistic/index.js","router/index.js","serviceWorker.js","initialStore.js","filters.js","reducers/login.js","reducers/photolisting.js","reducers/userstatistic.js","reducers/photo.js","reducers/index.js","sagas/login.js","sagas/photolisting.js","sagas/userstatistic.js","sagas/photo.js","sagas/index.js","index.js"],"names":["ButtonBack","withRouter","_ref","history","lastLocation","react_default","a","createElement","es_button","className","type","onClick","push","pathname","icon","withLastLocation","URL_FOR_PROFILE_ME","concat","process","URL_FOR_TOKEN","URL_FOR_AVATAR_PLACEHOLDER","URL_FOR_ERROR_IMAGE","URL_FOR_CARDS_PHOTOS","URL_FOR_LOGIN","URL_FOR_PHOTO_QUERY","match","params","id","URL_FOR_USER_QUERY","URL_FOR_USER_LIKES_QUERY","userId","URL_FOR_USER_PHOTO_LISTING_QUERY","URL_FOR_USER_STATISTIC","INITIONAL_CHARTS_CONFIGS","highchartsDownloadsConfig","title","seriesName","colors","highchartsViewsConfig","highchartsLikesConfig","CHARTS_CATEGORIES","CHART_CONFIG","legend","layout","align","verticalAlign","responsive","rules","condition","maxWidth","chartOptions","logoutAction","Header","Layout","HeaderApp","memo","props","profileName","profilePhotoUrl","handleAction","row","justify","col","span","style","whiteSpace","Link","to","display","Route","path","component","components_ButtonBack","marginLeft","href","window","localStorage","clear","justifyContent","alt","src","defaultProps","profileEmail","fetching","mapDispatchToProps","connect","state","login","NavTop","onFilterItemValue","label","filterValue","itemId","navTopItemActive","tag","color","propTypes","PropTypes","string","func","number","Meta","Card","PhotoCard","tags","photoName","photoDesc","photoID","userID","userAvatar","onSearchTagValue","card","width","cover","avatar","map","item","i","key","length","popover","placement","content","trigger","InputSearch","Input","Search","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","componentDidUpdate","prevProps","queryText","setState","inputValue","onChangeDebounced","debounce","value","onChangeInputValue","submitSearch","onSearchInputValue","handleInputChange","event","target","placeholder","onChange","onPressEnter","onSearch","PureComponent","Spinner","SpinnerPhoto","setInfoPhotoModalContent","lastUpdateInfo","views","downloads","likes","cameraMake","focalLength","aperture","shutterspeed","iso","cameraModel","height","date","moment","format","viewsFormat","numeral","downloadsFormat","likesFormat","photoModalHeader","photoModalContent","divider","InfoPhotoModal","esm_extends","_useState","useState","_useState2","slicedToArray","modalVisible","setModalVisible","lib_default","visible","effect","onClickAway","Error","text","error","Home","_this$props","cardsData","cardsPhotosRequestAction","componentDidMount","_this$props2","searchTextAction","getCardsPhotos","_this$props3","getPaginationChange","currentPage","paginationChangeAction","getFilterItemValue","itemText","filterItemValueAction","getSearchText","getChangeInputValue","searchChangeInputValueAction","_this2","_this$props4","filters","isListingLoading","cards","totalCards","photolistingRequestError","components_Spinner","src_components_Search","query","border","components_NavTop","components_PhotoCard","components_Error","per_page","pagination","showSizeChanger","current","page","defaultCurrent","total","photolisting","getPhotoSize","isSuccessPhotoRequest","document","getElementById","widthPhoto","heightPhoto","photoContainerWidth","offsetWidth","allowHeight","documentElement","clientHeight","w","h","Math","floor","photoWidth","photoHeight","Photo","requestAction","photoRequestAction","setPhotoSize","addEventListener","photoSize","removeEventListener","_this$state","info","userFirstName","userLastName","userName","twitterName","photoProfile","altDescriprion","photoSrc","isPhotoLoading","requestError","photoLoadAction","photoImageLoadAction","extra","padding","bodyStyle","headStyle","components_SpinnerPhoto","react_medium_image_zoom_lib_default","defaultStyles","overlay","background","image","onLoad","zoomImage","components_InfoPhotoModal","Component","photo","Profile","loadingRequestAction","location","handleLoguotProfile","loginError","profileFullName","TabPane","Tabs","User","handleUserQuery","API_URL","axios","get","then","res","userPhoto","userFirstPhoto","catch","size","overflow","tabs","defaultActiveKey","tab","src_pages_UserPhotoListing","src_pages_UserLikesPhotos","src_pages_UserStatistic","UserLikesPhotos","handleUserLikesPhotosQuery","handlePaginationChange","perPage","client_id","parseInt","_this$state2","margin","urls","regular","photo_tags","user","username","profile_image","small","handleSearchText","UserPhotoListing","handleUserPhotoListingQuery","large","UserStatistic","userStatistingRequestAction","highchartsConfigs","ReactHighcharts_default","config","userstatistic","Main","BrowserRouter","basename","dist","components_HeaderApp","Switch","exact","src_pages_Home","src_pages_Photo","src_pages_Profile","pages_User","Boolean","hostname","initialStore","undefined","action","objectSpread","dataForProps","highchartsConfigsObject","allRedusers","combineReducers","loginAfterToken","loginSaga","token","headers","response","regenerator_default","wrap","_context","prev","next","Authorization","sent","put","t0","stop","_marked","tokenFirst","code","axiosRequestForToken","_response","_context2","getItem","search","split","url","body","redirect_uri","client_secret","grant_type","post","setItem","_marked2","cardsPhotosRequestSaga","axiosRequestForcardsPhotos","newCards","forEach","newCardsItem","photolisting_marked","userStatisticRequestSaga","createCharts","configArr","entries","newObj","chart","xAxis","categories","plotOptions","area","stacking","lineColor","lineWidth","marker","series","name","axiosRequestUserStatistic","responce","highchartsDownloadsConfigData","highchartsViewsConfigData","highchartsLikesConfigData","data","userstatistic_marked","photoRequestSaga","photo_marked","rootSaga","all","takeEvery","t1","t2","t3","t4","t5","sagas_marked","sagaMiddleware","createSagaMiddleware","middleware","store","createStore","applyMiddleware","run","render","es","src_router","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aab6e682.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Icon } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport { withLastLocation } from 'react-router-last-location';\nimport './index.scss';\n\nconst ButtonBack = withRouter(({ history, lastLocation }) => {\n  if (!lastLocation) return false;\n  return (\n    <Button\n      className=\"btn-back\"\n      type=\"default\"\n      onClick={() => {\n        history.push(lastLocation.pathname);\n      }}\n    >\n      <Icon type=\"left\" />\n      Go back\n    </Button>\n  );\n});\n\nexport default withLastLocation(ButtonBack);\n","export const URL_FOR_PROFILE_ME = `${process.env.REACT_APP_PROFILE}/me`;\nexport const URL_FOR_TOKEN = 'https://unsplash.com/oauth/token';\nexport const URL_FOR_AVATAR_PLACEHOLDER = `${process.env.PUBLIC_URL}/ava-placeholder.jpg`;\nexport const URL_FOR_ERROR_IMAGE = `${process.env.PUBLIC_URL}/error-image.jpg`;\nexport const URL_FOR_CARDS_PHOTOS = 'https://api.unsplash.com/search/photos';\nexport const URL_FOR_LOGIN = `https://unsplash.com/oauth/authorize?redirect_uri=${\n  process.env.REACT_APP_UNSPLASH_API_REDIRECT_URI\n}&response_type=code&scope=public+read_user+write_user+read_photos+write_likes+write_photos+write_followers+read_collections+write_collections&client_id=${\n  process.env.REACT_APP_UNSPLASH_API_KEY\n}`;\nexport const URL_FOR_PHOTO_QUERY = match => `${process.env.REACT_APP_UNSPLASH_API_NAME}photos/${match.params.id}?client_id=${process.env.REACT_APP_UNSPLASH_API_KEY}`;\nexport const URL_FOR_USER_QUERY = match => `${process.env.REACT_APP_UNSPLASH_API_NAME}users/${match.params.id}?client_id=${process.env.REACT_APP_UNSPLASH_API_KEY}`;\nexport const URL_FOR_USER_LIKES_QUERY = userId => `${process.env.REACT_APP_UNSPLASH_API_NAME}users/${userId}/likes`;\nexport const URL_FOR_USER_PHOTO_LISTING_QUERY = userId => `${process.env.REACT_APP_UNSPLASH_API_NAME}users/${userId}/photos`;\nexport const URL_FOR_USER_STATISTIC = userId => `${process.env.REACT_APP_UNSPLASH_API_NAME}users/${userId}/statistics`;\n","export const INITIONAL_CHARTS_CONFIGS = {\n  highchartsDownloadsConfig: {\n    title: 'My Downloads',\n    seriesName: 'Downloads',\n    colors: 'rgba(255, 0, 255, .5)',\n  },\n  highchartsViewsConfig: {\n    title: 'My Views',\n    seriesName: 'Views',\n    colors: 'rgba(255, 165, 0, .5)',\n  },\n  highchartsLikesConfig: {\n    title: 'My Likes',\n    seriesName: 'Likes',\n    colors: 'rgba(0, 255, 0, .5)',\n  },\n};\nexport const CHARTS_CATEGORIES = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nexport const CHART_CONFIG = {\n  legend: {\n    layout: 'vertical',\n    align: 'right',\n    verticalAlign: 'middle',\n  },\n  responsive: {\n    rules: [{\n      condition: {\n        maxWidth: 700,\n      },\n      chartOptions: {\n        legend: {\n          layout: 'horizontal',\n          align: 'center',\n          verticalAlign: 'bottom',\n        },\n      },\n    }],\n  },\n};\n","export const logoutAction = () => ({\n  type: 'LOGOUT',\n});\n\nexport const photoRequestAction = match => ({\n  type: 'PHOTO_FETCHING',\n  isPhotoLoading: true,\n  match,\n});\nexport const photoImageLoadAction = () => ({\n  type: 'PHOTO_IMAGE_LOAD',\n});\n\nexport const userStatistingRequestAction = userId => ({\n  type: 'USER_STATISTIC_FETCHING',\n  isListingLoading: true,\n  userId,\n});\n\nexport const loadingRequestAction = location => ({\n  type: 'LOGIN_FETCHING',\n  fetching: true,\n  location,\n});\n\nexport const cardsPhotosRequestAction = cardsData => ({\n  type: 'CARDS_PHOTOS_FETCHING',\n  isListingLoading: true,\n  cardsData,\n});\n\nexport const paginationChangeAction = currentPage => ({\n  type: 'PAGINATION_CHANGE',\n  page: currentPage,\n});\n\nexport const filterItemValueAction = (itemText, itemId) => ({\n  type: 'FILTER_ITEM_VALUE',\n  itemText,\n  itemId,\n});\n\nexport const searchTextAction = (text, tags) => ({\n  type: 'SEARCH_TEXT',\n  tags,\n  text,\n});\n\nexport const searchChangeInputValueAction = text => ({\n  type: 'SEARCH_TEXT_CHANGE_INPUT_VALUE',\n  text,\n});\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Link, withRouter } from 'react-router-dom';\nimport {\n  Layout,\n  Icon,\n  Button,\n  Row,\n  Col,\n} from 'antd';\nimport { withLastLocation } from 'react-router-last-location';\nimport { connect } from 'react-redux';\nimport { ButtonBack } from '../index';\nimport { URL_FOR_LOGIN } from '../../constants';\nimport { logoutAction } from '../../actions';\nimport './index.scss';\n\nconst { Header } = Layout;\n\nconst HeaderApp = withRouter(memo((props) => {\n  const {\n    history,\n    profileName,\n    profilePhotoUrl,\n    logoutAction: handleAction,\n  } = props;\n  const handleLoguotHeader = () => {\n    handleAction();\n    window.localStorage.clear();\n    history.push('/');\n  };\n  return (\n    <div className=\"header-app\">\n      <Header className=\"user-layout__header\">\n        <div className=\"page\">\n          <Row type=\"flex\" justify=\"space-between\">\n            <Col span={9} style={{ whiteSpace: 'nowrap' }}>\n              <Link to=\"/\" style={{ display: 'inline-block' }}>\n                <h1 className=\"site-logo\">PHOTOLISTING</h1>\n              </Link>\n              <Route\n                path=\"/:id\"\n                component={() => <ButtonBack style={{ marginLeft: '10px' }} />}\n              />\n\n              {!profileName && (\n                <Button\n                  style={{ marginLeft: '10px' }}\n                  href={URL_FOR_LOGIN}\n                >\n                  Login\n                </Button>\n              )}\n              {profileName && (\n                <span>\n                  <Button\n                    className=\"btn-logout\"\n                    style={{ marginLeft: '10px' }}\n                    onClick={handleLoguotHeader}\n                  >\n                    Logout\n                  </Button>\n                </span>\n              )}\n            </Col>\n\n            <Col\n              span={3}\n              style={{ display: 'flex', justifyContent: 'flex-end' }}\n            >\n              {profileName && (\n                <Link to=\"/profile\">\n                  <Icon\n                    component={() => (\n                      <img\n                        className=\"user-avatar\"\n                        alt=\"\"\n                        src={`${profilePhotoUrl}`}\n                      />\n                    )}\n                  />\n                </Link>\n              )}\n            </Col>\n          </Row>\n        </div>\n      </Header>\n    </div>\n  );\n}));\n\nHeaderApp.propTypes = {\n  history: PropTypes.shape({\n    prop: PropTypes.string,\n  }),\n  logoutAction: PropTypes.func,\n  profilePhotoUrl: PropTypes.string,\n  profileName: PropTypes.string,\n  profileEmail: PropTypes.string,\n  fetching: PropTypes.bool,\n};\nHeaderApp.defaultProps = {\n  history: {},\n  logoutAction: () => {},\n  profilePhotoUrl: '',\n  profileName: '',\n  profileEmail: '',\n  fetching: false,\n};\n\nconst mapStateToProps = (state) => {\n  const { login } = state;\n  return login;\n};\n\nconst mapDispatchToProps = {\n  logoutAction,\n};\n\nexport default withLastLocation(connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(HeaderApp));\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Tag } from 'antd';\nimport './index.scss';\n\nconst NavTop = memo(({\n  onFilterItemValue,\n  label,\n  filterValue,\n  itemId,\n  navTopItemActive,\n}) => (\n  <Tag\n    color={`${itemId === navTopItemActive ? 'purple' : ''}`}\n    onClick={() => onFilterItemValue(filterValue, itemId)}\n  >\n    {label}\n  </Tag>\n));\n\nNavTop.propTypes = {\n  label: PropTypes.string,\n  filterValue: PropTypes.string,\n  onFilterItemValue: PropTypes.func,\n  itemId: PropTypes.number,\n  navTopItemActive: PropTypes.number,\n};\nNavTop.defaultProps = {\n  itemId: 0,\n  navTopItemActive: 0,\n  label: '',\n  filterValue: '',\n  onFilterItemValue: () => { },\n};\nexport default NavTop;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport {\n  Card,\n  Avatar,\n  Tag,\n  Popover,\n} from 'antd';\nimport './index.scss';\n\nconst { Meta } = Card;\n\nconst PhotoCard = memo(({\n  tags,\n  photoName,\n  photoDesc,\n  title,\n  photoID,\n  userID,\n  userAvatar,\n  onSearchTagValue,\n}) => (\n  <div className=\"photo-card-self\">\n    <Card\n      style={{ width: '100%' }}\n      cover={(\n        <Link\n          className=\"photo-card__photo-link\"\n          to={`/photo/${photoID}`}\n        >\n          <img\n            className=\"photo-card__img\"\n            alt=\"example\"\n            src={photoName}\n          />\n        </Link>\n        )}\n    >\n      { title && (\n        <Link\n          className=\"photo-card-self__link-ava\"\n          to={`/users/${userID}`}\n        >\n          <Meta\n            avatar={\n              <Avatar src={userAvatar} />\n            }\n            title={title}\n          />\n        </Link>\n      )}\n      <p className=\"photo-card-self__desc\">\n        {`${photoDesc || 'No Description'}`}\n      </p>\n      <div className=\"photo-card-self__badge-wrap\">\n        {tags.map((item, i) => {\n          if (i < 3) {\n            return (\n              <Tag\n                key={item.title}\n                onClick={() => onSearchTagValue(item.title, 'tags')}\n                className=\"photo-card-self__badge\"\n              >\n                {item.title}\n              </Tag>\n            );\n          }\n          return null;\n        })}\n        {tags.length > 3 && (\n          <Popover\n            placement=\"top\"\n            title=\"Remaining tags\"\n            content={(\n              <div>\n                {tags.map((item, i) => {\n                  if (i > 2) {\n                    return (\n                      <Tag\n                        key={item.title}\n                        onClick={() => onSearchTagValue(item.title, 'tags')}\n                        className=\"photo-card-self__badge\"\n                      >\n                        {item.title}\n                      </Tag>\n                    );\n                  }\n                  return null;\n                })}\n              </div>\n            )}\n            trigger=\"click\"\n          >\n            <Tag className=\"photo-card-self__badge\">more tags...</Tag>\n          </Popover>\n        )}\n      </div>\n    </Card>\n  </div>\n));\n\nPhotoCard.propTypes = {\n  photoName: PropTypes.string,\n  photoDesc: PropTypes.string,\n  title: PropTypes.string,\n  tags: PropTypes.arrayOf(PropTypes.object),\n  userAvatar: PropTypes.string,\n  onSearchTagValue: PropTypes.func,\n  photoID: PropTypes.string,\n  userID: PropTypes.string,\n};\nPhotoCard.defaultProps = {\n  photoName: '',\n  photoDesc: '',\n  title: 'Noname',\n  tags: [],\n  userAvatar: '',\n  photoID: '',\n  userID: '',\n  onSearchTagValue: () => {},\n};\n\nexport default PhotoCard;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'antd';\nimport debounce from 'lodash/debounce';\nimport './index.css';\n\nconst InputSearch = Input.Search;\n\nclass Search extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    const { queryText } = this.props;\n    this.state = {\n      inputValue: queryText,\n    };\n  }\n\n  componentDidUpdate = (prevProps) => {\n    const { queryText } = this.props;\n    if (prevProps.queryText !== queryText) {\n      this.setState({\n        inputValue: queryText,\n      });\n    }\n  };\n\n  onChangeDebounced = debounce((value) => {\n    const { onChangeInputValue } = this.props;\n    onChangeInputValue(value);\n  }, 500)\n\n  submitSearch = () => {\n    const { inputValue } = this.state;\n    const { onSearchInputValue } = this.props;\n    if (inputValue) onSearchInputValue(inputValue);\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      inputValue: event.target.value,\n    }, () => {\n      const { inputValue } = this.state;\n      this.onChangeDebounced(inputValue);\n    });\n  };\n\n  render() {\n    const { inputValue } = this.state;\n    return (\n      <div className=\"search\">\n        <InputSearch\n          className=\"search__input\"\n          value={inputValue}\n          placeholder=\"Wallpapers\"\n          onChange={this.handleInputChange}\n          onPressEnter={this.submitSearch}\n          onSearch={this.submitSearch}\n          style={{ width: '100%' }}\n        />\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = {\n  queryText: PropTypes.string,\n  onSearchInputValue: PropTypes.func,\n  onChangeInputValue: PropTypes.func,\n};\nSearch.defaultProps = {\n  queryText: '',\n  onSearchInputValue: () => {},\n  onChangeInputValue: () => {},\n};\n\nexport default Search;\n","import React, { memo } from 'react';\nimport './Spinner.css';\n\nconst Spinner = memo(() => (\n  <div className=\"site-spinner\">\n    <div className=\"lds-ring\">\n      <div>&nbsp;</div>\n      <div>&nbsp;</div>\n      <div>&nbsp;</div>\n      <div>&nbsp;</div>\n    </div>\n  </div>\n));\n\nexport default Spinner;\n","import React, { memo } from 'react';\nimport './index.scss';\n\nconst SpinnerPhoto = memo(() => (\n  <div className=\"spinner-photo\">\n    <div className=\"lds-ring\">\n      <div>&nbsp;</div>\n      <div>&nbsp;</div>\n      <div>&nbsp;</div>\n      <div>&nbsp;</div>\n    </div>\n  </div>\n));\n\nexport default SpinnerPhoto;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Divider, Icon } from 'antd';\nimport moment from 'moment';\nimport 'moment-timezone';\nimport numeral from 'numeral';\n\nconst setInfoPhotoModalContent = ({\n  lastUpdateInfo,\n  photoDesc,\n  views,\n  downloads,\n  likes,\n  cameraMake,\n  focalLength,\n  aperture,\n  shutterspeed,\n  iso,\n  cameraModel,\n  width,\n  height,\n}) => {\n  const date = moment(lastUpdateInfo).format('LL');\n  const viewsFormat = numeral(views).format('0,0');\n  const downloadsFormat = numeral(downloads).format('0,0');\n  const likesFormat = numeral(likes).format('0,0');\n  const photoModalHeader = (\n    <header className=\"photo-info__header\">\n      <h2 className=\"photo-info__title\">\n        Info\n      </h2>\n      { photoDesc && (\n        <p className=\"photo-info__desc\">\n          <i>\n            <b>\n              {photoDesc}\n            </b>\n          </i>\n        </p>\n      )}\n      <p className=\"photo-info__date\">\n        Published on\n        {' '}\n        {date}\n      </p>\n    </header>\n  );\n\n  const photoModalContent = (\n    <div className=\"photo-info__content\">\n      <ul className=\"photo-info__list-head photo-info-list-head\">\n        <li className=\"photo-info-list-head__item\">\n          <h3 className=\"photo-info-list-head__title\">\n            <Icon type=\"eye\" />\n            {' '}\n            Views\n          </h3>\n          <p className=\"photo-info-list-head__text-main\">\n            {viewsFormat}\n          </p>\n          <p className=\"photo-info-list-head__text\">\n            {''}\n          </p>\n        </li>\n        <li className=\"photo-info-list-head__item\">\n          <h3 className=\"photo-info-list-head__title\">\n            <Icon type=\"arrow-down\" />\n            {' '}\n            Downloads\n          </h3>\n          <p className=\"photo-info-list-head__text-main\">\n            {downloadsFormat}\n          </p>\n          <p className=\"photo-info-list-head__text\">\n            {''}\n          </p>\n        </li>\n        <li className=\"photo-info-list-head__item\">\n          <h3 className=\"photo-info-list-head__title\">\n            <Icon type=\"heart\" />\n            {' '}\n            Likes\n          </h3>\n          <p className=\"photo-info-list-head__text-main\">\n            {likesFormat}\n          </p>\n          <p className=\"photo-info-list-head__text\">\n            {''}\n          </p>\n        </li>\n      </ul>\n\n      <Divider />\n\n      <ul className=\"photo-info-list photo-info__list-content\">\n        <li className=\"photo-info-list__item\">\n          <h3 className=\"photo-info-list__title\">\n            Camera Make\n          </h3>\n          <p className=\"photo-info-list__text\">\n            {cameraMake || '--'}\n          </p>\n        </li>\n        <li className=\"photo-info-list__item\">\n          <h3 className=\"photo-info-list__title\">\n            Camera Model\n          </h3>\n          <p className=\"photo-info-list__text\">\n            {cameraModel || '--'}\n          </p>\n        </li>\n        <li className=\"photo-info-list__item\">\n          <h3 className=\"photo-info-list__title\">\n            Focal Length\n          </h3>\n          <p className=\"photo-info-list__text\">\n            {focalLength || '--'}\n          </p>\n        </li>\n        <li className=\"photo-info-list__item\">\n          <h3 className=\"photo-info-list__title\">\n            Aperture\n          </h3>\n          <p className=\"photo-info-list__text\">\n            {aperture || '--'}\n          </p>\n        </li>\n        <li className=\"photo-info-list__item\">\n          <h3 className=\"photo-info-list__title\">\n            Shutter Speed\n          </h3>\n          <p className=\"photo-info-list__text\">\n            {shutterspeed || '--'}\n          </p>\n        </li>\n        <li className=\"photo-info-list__item\">\n          <h3 className=\"photo-info-list__title\">\n            ISO\n          </h3>\n          <p className=\"photo-info-list__text\">\n            {iso || '--'}\n          </p>\n        </li>\n        <li className=\"photo-info-list__item\">\n          <h3 className=\"photo-info-list__title\">\n            Dimensions\n          </h3>\n          <p className=\"photo-info-list__text\">\n            {(width && height) ? `${width} x ${height}` : '--' }\n          </p>\n        </li>\n      </ul>\n    </div>\n  );\n  return (\n    <div className=\"photo-info\">\n      { photoModalHeader }\n      { photoModalContent }\n    </div>\n  );\n};\n\nsetInfoPhotoModalContent.propTypes = {\n  lastUpdateInfo: PropTypes.string,\n  photoDesc: PropTypes.string,\n  views: PropTypes.number,\n  downloads: PropTypes.number,\n  likes: PropTypes.number,\n  cameraMake: PropTypes.string,\n  focalLength: PropTypes.string,\n  aperture: PropTypes.string,\n  shutterspeed: PropTypes.string,\n  iso: PropTypes.number,\n  cameraModel: PropTypes.string,\n  width: PropTypes.number,\n  height: PropTypes.number,\n};\n\nsetInfoPhotoModalContent.defaultProps = {\n  lastUpdateInfo: '',\n  photoDesc: '',\n  views: 0,\n  downloads: 0,\n  likes: 0,\n  cameraMake: '',\n  focalLength: '',\n  aperture: '',\n  shutterspeed: '',\n  iso: 0,\n  cameraModel: '',\n  width: 0,\n  height: 0,\n};\n\nexport default setInfoPhotoModalContent;\n","import React, { memo, useState } from 'react';\nimport { Button, Icon } from 'antd';\nimport Modal from 'react-awesome-modal';\nimport setInfoPhotoModalContent from './infoPhotoModalContent';\nimport './index.scss';\n\nconst InfoPhotoModal = memo(({ ...props }) => {\n  const [modalVisible, setModalVisible] = useState(false);\n  const openModal = () => setModalVisible(true);\n  const closeModal = () => setModalVisible(false);\n  const photoModalContent = setInfoPhotoModalContent(props);\n\n  return (\n    <div className=\"photo-info-wrap\">\n      <Button\n        style={{ marginLeft: '10px' }}\n        onClick={openModal}\n      >\n        <Icon type=\"info-circle\" />\n        Info\n      </Button>\n      <Modal\n        visible={modalVisible}\n        effect=\"fadeInDown\"\n        onClickAway={closeModal}\n        className=\"modal\"\n      >\n        {photoModalContent}\n      </Modal>\n    </div>\n  );\n});\n\nexport default InfoPhotoModal;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'antd';\nimport { URL_FOR_ERROR_IMAGE } from '../../constants';\nimport './index.scss';\n\nconst Error = memo(({ text, error }) => (\n  <div className=\"error\">\n    <div className=\"error__content\">\n      <div className=\"error__content-inner\">\n        <h3 className=\"error__title\">OOPS</h3>\n        <h2 className=\"error__subtitle\">{text}</h2>\n        {' '}\n        <Link to=\"/\">\n          <Button\n            style={{ marginLeft: '10px' }}\n          >\n            BACK TO HOME\n          </Button>\n        </Link>\n      </div>\n    </div>\n    <img alt={text} src={`${URL_FOR_ERROR_IMAGE}`} className=\"error__bg\" />\n  </div>\n));\n\nError.propTypes = {\n  text: PropTypes.string,\n};\n\nError.defaultProps = {\n  text: '',\n};\n\nexport default Error;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Pagination } from 'antd';\nimport {\n  cardsPhotosRequestAction,\n  paginationChangeAction,\n  filterItemValueAction,\n  searchTextAction,\n  searchChangeInputValueAction,\n} from '../../actions';\nimport {\n  Search,\n  PhotoCard,\n  NavTop,\n  Spinner,\n  Error,\n} from '../../components';\nimport 'antd/dist/antd.css';\nimport './index.scss';\n\nclass Home extends PureComponent {\n  componentDidUpdate = (prevProps) => {\n    const { cardsData, cardsPhotosRequestAction: handleAction } = this.props;\n    if (prevProps.cardsData !== cardsData) handleAction(cardsData);\n  };\n\n  componentDidMount = () => {\n    const { match: { params: { tag } }, searchTextAction: handleAction } = this.props;\n    if (tag) handleAction(tag, 'tags');\n    else this.getCardsPhotos();\n  };\n\n  getCardsPhotos = () => {\n    const { cardsData, cardsPhotosRequestAction: handleAction } = this.props;\n    handleAction(cardsData);\n  };\n\n  getPaginationChange = (currentPage) => {\n    const { paginationChangeAction: handleAction } = this.props;\n    handleAction(currentPage);\n  };\n\n  getFilterItemValue = (itemText, itemId) => {\n    const { filterItemValueAction: handleAction } = this.props;\n    handleAction(itemText, itemId);\n  };\n\n  getSearchText = (text, tags) => {\n    const { searchTextAction: handleAction } = this.props;\n    handleAction(text, tags);\n  }\n\n  getChangeInputValue = (text) => {\n    const { searchChangeInputValueAction: handleAction } = this.props;\n    handleAction(text);\n  }\n\n  render() {\n    const {\n      filters,\n      isListingLoading,\n      cards,\n      totalCards,\n      cardsData,\n      navTopItemActive,\n      photolistingRequestError,\n    } = this.props;\n    if (photolistingRequestError) return <div>Error loading photolisting</div>;\n    return (\n      <div className=\"App\">\n        { isListingLoading && (<Spinner className=\"spinner\" />)}\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <Search\n              onSearchInputValue={this.getSearchText}\n              onChangeInputValue={this.getChangeInputValue}\n              queryText={cardsData.query}\n            />\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <ul className=\"nav-top\">\n              {filters.map(item => (\n                <li\n                  key={item.id}\n                  className={`nav-top__item ${item.border ? 'nav-top__item_border-right' : ''}`}\n                >\n                  <NavTop\n                    navTopItemActive={navTopItemActive}\n                    itemId={item.id}\n                    onFilterItemValue={this.getFilterItemValue}\n                    key={item.id}\n                    label={item.label}\n                    filterValue={item.filterValue}\n                  />\n                </li>\n              ))\n              }\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-12\">\n            {!isListingLoading && (\n              <ul className=\"photo-list\">\n                {\n                cards.map(item => (\n                  <li\n                    key={item.photoID}\n                    className=\"photo-list__item pl-3\"\n                  >\n                    <PhotoCard\n                      photoName={item.photoName}\n                      photoDesc={item.photoDesc}\n                      title={item.title}\n                      tags={item.tags}\n                      photoID={item.photoID}\n                      userID={item.userID}\n                      userAvatar={item.userAvatar}\n                      onSearchTagValue={this.getSearchText}\n                    />\n                  </li>\n                ))\n                }\n              </ul>\n            )}\n            {!totalCards && (\n              <div className=\"cards__text-empty pl-3\">\n                <Error\n                  text=\"No images were found for your request. Try to find more.\"\n                />\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12 pagination\">\n\n            {totalCards > cardsData.per_page && (\n              <Pagination\n                className=\"ml-3\"\n                showSizeChanger\n                onChange={this.getPaginationChange}\n                current={cardsData.page}\n                defaultCurrent={1}\n                total={totalCards}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  cardsPhotosRequestAction: PropTypes.func,\n  paginationChangeAction: PropTypes.func,\n  filterItemValueAction: PropTypes.func,\n  searchTextAction: PropTypes.func,\n  searchChangeInputValueAction: PropTypes.func,\n  filters: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    label: PropTypes.string,\n    filterValue: PropTypes.string,\n  })),\n  cardsData: PropTypes.shape({\n    query: PropTypes.string,\n    page: PropTypes.number,\n    per_page: PropTypes.number,\n  }),\n  totalCards: PropTypes.number,\n  navTopItemActive: PropTypes.number,\n  cards: PropTypes.arrayOf(PropTypes.object),\n  isListingLoading: PropTypes.bool,\n  photolistingRequestError: PropTypes.bool,\n  match: PropTypes.shape({\n    prop: PropTypes.string,\n  }),\n};\nHome.defaultProps = {\n  cardsPhotosRequestAction: () => {},\n  paginationChangeAction: () => {},\n  filterItemValueAction: () => {},\n  searchTextAction: () => {},\n  searchChangeInputValueAction: () => {},\n  filters: [],\n  isListingLoading: false,\n  cards: [],\n  cardsData: {\n    query: 'wallpapers',\n    page: 1,\n    per_page: 6,\n  },\n  totalCards: 10,\n  navTopItemActive: 2,\n  photolistingRequestError: false,\n  match: {},\n};\n\nconst mapStateToProps = (state) => {\n  const { photolisting } = state;\n  return photolisting;\n};\n\nconst mapDispatchToProps = ({\n  cardsPhotosRequestAction,\n  paginationChangeAction,\n  filterItemValueAction,\n  searchTextAction,\n  searchChangeInputValueAction,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Home);\n","const getPhotoSize = (props) => {\n  const { isSuccessPhotoRequest } = props;\n  if (window.document.getElementById('photo-container') && !isSuccessPhotoRequest) {\n    const { widthPhoto, heightPhoto } = props;\n    const photoContainerWidth = window.document.getElementById('photo-container').offsetWidth - 2;\n    const allowHeight = window.document.documentElement.clientHeight - 147 - 53;\n    let w = 0;\n    let h = 0;\n    if (widthPhoto > heightPhoto) {\n      w = Math.floor(widthPhoto / photoContainerWidth);\n      h = Math.floor(heightPhoto / w);\n\n      if (h > allowHeight) return { photoWidth: 'auto', photoHeight: `${allowHeight}px` };\n      return { photoWidth: 'auto', photoHeight: `${h}px` };\n    }\n    if (heightPhoto > widthPhoto) {\n      h = Math.floor(heightPhoto / allowHeight);\n      w = Math.floor(widthPhoto / h);\n\n      if (w > photoContainerWidth) return { photoWidth: `${photoContainerWidth}px`, photoHeight: 'auto' };\n      return { photoWidth: `${w}px`, photoHeight: 'auto' };\n    }\n  }\n  return { photoWidth: '300px', photoHeight: 'auto' };\n};\n\nexport default getPhotoSize;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {\n  Card,\n  Button,\n  Icon,\n  Tag,\n  Popover,\n} from 'antd';\nimport ImageZoom from 'react-medium-image-zoom';\nimport { SpinnerPhoto, InfoPhotoModal, Error } from '../../components';\nimport { photoRequestAction, photoImageLoadAction } from '../../actions';\nimport getPhotoSize from './getPhotoSize';\nimport './index.scss';\n\nclass Photo extends Component {\n  state = {\n    photoWidth: null,\n    photoHeight: null,\n  }\n\n  componentDidMount = () => {\n    const { match, photoRequestAction: requestAction } = this.props;\n    requestAction(match);\n    this.setPhotoSize();\n    window.addEventListener('resize', this.setPhotoSize);\n  };\n\n  componentDidUpdate = (prevProps) => {\n    const { widthPhoto } = this.props;\n    if (prevProps.widthPhoto !== widthPhoto) this.setPhotoSize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.setPhotoSize);\n  }\n\n  setPhotoSize = () => {\n    const photoSize = getPhotoSize(this.props);\n    this.setState({\n      photoWidth: photoSize.photoWidth,\n      photoHeight: photoSize.photoHeight,\n    });\n  }\n\n  render() {\n    const { photoWidth, photoHeight } = this.state;\n    const {\n      info,\n      userFirstName,\n      userLastName,\n      userName,\n      twitterName,\n      photoProfile,\n      tags,\n      altDescriprion,\n      photoSrc,\n      isPhotoLoading,\n      requestError,\n      isSuccessPhotoRequest,\n      photoImageLoadAction: photoLoadAction,\n    } = this.props;\n    const photoSize = { width: photoWidth, height: photoHeight };\n    return (\n      <div\n        className=\"photo-container photo\"\n        id=\"photo-container\"\n      >\n        { !isSuccessPhotoRequest && !requestError && (\n          <Card\n            title={(\n              <Link to={`/users/${userName}`}>\n                <div className=\"photo__twitter photo-twitter\">\n                  <img\n                    src={photoProfile}\n                    alt=\"Avatar\"\n                    className=\"photo-twitter__ava\"\n\n                  />\n                  <div className=\"photo-twitter__content\">\n                    <p\n                      className=\"photo-twitter__user-name\"\n                    >\n                      {`${userFirstName} ${userLastName}`}\n                    </p>\n                    <p className=\"photo-twitter__twitter-name\">\n                      @\n                      {twitterName}\n                    </p>\n                  </div>\n                </div>\n              </Link>\n            )}\n            extra={(\n              <div className=\"photo-header\">\n                <Button\n                  style={{ marginLeft: '10px' }}\n                  href=\"#\"\n                >\n                  <Icon type=\"download\" />\n                  Download\n                </Button>\n              </div>\n            )}\n            style={{\n              width: '100%',\n              height: '100%',\n              padding: 0,\n            }}\n            bodyStyle={{ padding: 0 }}\n            headStyle={{ padding: '0 10px' }}\n          >\n            <div className=\"photo__content photo-content\">\n              { isPhotoLoading && <SpinnerPhoto /> }\n              <ImageZoom\n                defaultStyles={{\n                  overlay: {\n                    background: 'rgba(0, 0, 0, .8)',\n                  },\n                }}\n                image={{\n                  src: photoSrc,\n                  alt: altDescriprion,\n                  className: 'photo-content__photo',\n                  style: photoSize,\n                  onLoad: photoLoadAction,\n                }}\n                zoomImage={{\n                  src: photoSrc,\n                  alt: altDescriprion,\n                }}\n              />\n              <div\n                className=\"photo-content__footer photo-footer\"\n              >\n                <div className=\"photo-footer__tags\">\n                  { tags.length > 2 && (\n                    <Popover\n                      placement=\"topLeft\"\n                      title=\"All tags\"\n                      content={(\n                        <div>\n                          {tags.map((item, i) => {\n                            if (i > 2) {\n                              return (\n                                <Link\n                                  to={`/${item.title}`}\n                                  key={item.title}\n                                >\n                                  <Tag key={item.title}>\n                                    {item.title}\n                                  </Tag>\n                                </Link>\n                              );\n                            }\n                            return null;\n                          })}\n                        </div>\n                      )}\n                      trigger=\"click\"\n                    >\n                      <Button\n                        style={{ marginLeft: '10px' }}\n                        href=\"#\"\n                      >\n                        <Icon type=\"tag\" />\n                        Show all tags\n                      </Button>\n                    </Popover>\n                  )}\n                </div>\n                <div className=\"photo-footer__btns\">\n                  <Button\n                    style={{ marginLeft: '10px' }}\n                    href=\"#\"\n                  >\n                    <Icon type=\"share-alt\" />\n                    Share\n                  </Button>\n                  <InfoPhotoModal {...info} />\n                </div>\n              </div>\n            </div>\n          </Card>\n        )}\n        { !isPhotoLoading && !isSuccessPhotoRequest && requestError && (\n        <Error text=\"Sorry, no photo found\" />\n        )}\n      </div>\n    );\n  }\n}\n\nPhoto.propTypes = {\n  info: PropTypes.shape({}),\n  userFirstName: PropTypes.string,\n  userLastName: PropTypes.string,\n  userName: PropTypes.string,\n  twitterName: PropTypes.string,\n  photoProfile: PropTypes.string,\n  tags: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n  })),\n  altDescriprion: PropTypes.string,\n  photoSrc: PropTypes.string,\n  widthPhoto: PropTypes.number,\n  heightPhoto: PropTypes.number,\n  photoRequestAction: PropTypes.func,\n  photoImageLoadAction: PropTypes.func,\n  isPhotoLoading: PropTypes.bool,\n  isSuccessPhotoRequest: PropTypes.bool,\n  requestError: PropTypes.bool,\n  match: PropTypes.shape({\n    prop: PropTypes.string,\n  }),\n  history: PropTypes.shape({\n    prop: PropTypes.string,\n  }),\n};\nPhoto.defaultProps = {\n  info: {},\n  userFirstName: '',\n  userLastName: '',\n  userName: '',\n  twitterName: '',\n  photoProfile: '',\n  tags: [],\n  altDescriprion: '',\n  photoSrc: '',\n  widthPhoto: 300,\n  heightPhoto: 300,\n  photoImageLoadAction: () => {},\n  photoRequestAction: () => {},\n  isPhotoLoading: true,\n  isSuccessPhotoRequest: true,\n  requestError: false,\n  match: {},\n  history: {},\n};\n\nconst mapStateToProps = (state) => {\n  const { photo } = state;\n  return photo;\n};\n\nconst mapDispatchToProps = ({\n  photoRequestAction,\n  photoImageLoadAction,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Photo);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loadingRequestAction, logoutAction } from '../../actions';\nimport { Spinner, Error } from '../../components';\nimport './index.scss';\n\nclass Profile extends PureComponent {\n  componentDidMount = () => {\n    const { profilePhotoUrl } = this.props;\n    if (!profilePhotoUrl) {\n      const { loadingRequestAction: handleAction } = this.props;\n      handleAction(window.document.location);\n    }\n  }\n\n  handleLoguotProfile = () => {\n    const { history, logoutAction: handleAction } = this.props;\n    handleAction();\n    window.localStorage.clear();\n    history.push('/');\n  };\n\n  render() {\n    const {\n      fetching,\n      loginError,\n      profilePhotoUrl,\n      profileFullName,\n      profileEmail,\n      profileName,\n    } = this.props;\n    return (\n      <div className=\"profile\">\n        { fetching && (<Spinner className=\"spinner\" />)}\n        { !fetching && !loginError && (\n          <div className=\"profile__content profile-content\">\n            <img\n              className=\"profile-content__avatar\"\n              src={profilePhotoUrl}\n              alt=\"Profile avatar\"\n            />\n            <div className=\"profile-content__title-wrap\">\n              <h2 className=\"profile-content__title\">\n                {profileFullName}\n              </h2>\n              <p>{profileEmail}</p>\n              <p className=\"profile-content__text\">\n                Download free, beautiful high-quality photos curated by\n                {' '}\n                {\n                  profileName\n                }\n              </p>\n            </div>\n          </div>\n        )}\n        { !fetching && loginError && (\n          <Error text=\"An authorization failed. Try logging in later!\" />\n        )}\n      </div>\n    );\n  }\n}\n\nProfile.propTypes = {\n  logoutAction: PropTypes.func,\n  loadingRequestAction: PropTypes.func,\n  profilePhotoUrl: PropTypes.string,\n  profileFullName: PropTypes.string,\n  profileName: PropTypes.string,\n  profileEmail: PropTypes.string,\n  fetching: PropTypes.bool,\n  loginError: PropTypes.bool,\n  history: PropTypes.shape({\n    profilePhotoUrl: PropTypes.string,\n  }),\n};\nProfile.defaultProps = {\n  logoutAction: () => {},\n  loadingRequestAction: () => {},\n  profilePhotoUrl: '',\n  profileFullName: '',\n  profileName: '',\n  profileEmail: '',\n  fetching: false,\n  loginError: false,\n  history: {},\n};\n\nconst mapStateToProps = (state) => {\n  const { login } = state;\n  return login;\n};\n\nconst mapDispatchToProps = ({\n  loadingRequestAction,\n  logoutAction,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Profile);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Row,\n  Col,\n  Avatar,\n  Tabs,\n} from 'antd';\nimport axios from 'axios';\nimport get from 'lodash/get';\nimport {\n  Spinner,\n  UserLikesPhotos,\n  UserStatistic,\n  UserPhotoListing,\n} from '../../components';\nimport { URL_FOR_USER_QUERY } from '../../constants';\nimport './user.css';\n\nconst { TabPane } = Tabs;\n\nclass User extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isListingLoading: false,\n      userPhoto: '',\n      userFirstPhoto: '',\n    };\n  }\n\n  componentDidMount = () => {\n    this.handleUserQuery();\n  };\n\n  handleUserQuery = () => {\n    const { match, history } = this.props;\n    this.setState({ isListingLoading: true });\n    const API_URL = URL_FOR_USER_QUERY(match);\n    axios.get(API_URL)\n      .then((res) => {\n        const userPhoto = get(res, 'data.profile_image.large') || 'No User Photo';\n        const userFirstPhoto = get(res, 'data.photos[0].urls.regular') || 'No Photo';\n\n        this.setState({\n          isListingLoading: false,\n          userPhoto,\n          userFirstPhoto,\n        });\n      })\n      .catch(() => {\n        history.push('/');\n      });\n  }\n\n  render() {\n    const {\n      isListingLoading,\n      userPhoto,\n      userFirstPhoto,\n    } = this.state;\n\n    const { match } = this.props;\n    return (\n      <div className=\"user-container\">\n        { isListingLoading && (<Spinner />)}\n\n        <Row style={{ display: 'flex', justifyContent: 'center' }}>\n          <Col>\n            <img\n              className=\"user-card__first-img\"\n              alt=\"example\"\n              src={userFirstPhoto}\n            />\n            <div className=\"user-card__photo-wrap\">\n              <Avatar size={150} src={userPhoto} />\n            </div>\n          </Col>\n        </Row>\n        <Row\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            overflow: 'hidden',\n          }}\n        >\n          <Col>\n            <div className=\"user-tabs\">\n              <Tabs\n                className=\"user-tabs__item\"\n                defaultActiveKey=\"1\"\n              >\n                <TabPane\n                  tab=\"My photos\"\n                  key=\"1\"\n                  className=\"user-tabs__pane\"\n                >\n                  <UserPhotoListing userId={match.params.id} />\n                </TabPane>\n                <TabPane\n                  tab=\"My likes\"\n                  key=\"2\"\n                  className=\"user-tabs__pane\"\n                >\n                  <UserLikesPhotos userId={match.params.id} />\n                </TabPane>\n                <TabPane\n                  tab=\"My statistic\"\n                  key=\"3\"\n                  className=\"user-tabs__pane\"\n                >\n                  <UserStatistic userId={match.params.id} />\n                </TabPane>\n              </Tabs>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nUser.propTypes = {\n  history: PropTypes.shape({\n    prop: PropTypes.string,\n  }),\n  match: PropTypes.shape({\n    prop: PropTypes.string,\n  }),\n};\nUser.defaultProps = {\n  history: {},\n  match: {},\n};\nexport default User;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col, Pagination } from 'antd';\nimport axios from 'axios';\nimport get from 'lodash/get';\nimport { Spinner, PhotoCard } from '../../components';\nimport { URL_FOR_USER_LIKES_QUERY } from '../../constants';\nimport './index.css';\n\nclass UserLikesPhotos extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isListingLoading: false,\n      cards: [],\n      totalCards: 10,\n      page: 1,\n      per_page: 6,\n    };\n  }\n\n  componentDidMount = () => {\n    this.handleUserLikesPhotosQuery();\n  };\n\n  handlePaginationChange = (current) => {\n    this.setState({\n      page: current,\n      per_page: 6,\n    }, this.handleUserLikesPhotosQuery);\n  };\n\n  handleUserLikesPhotosQuery = () => {\n    const { history, userId } = this.props;\n    const { page, per_page: perPage } = this.state;\n    this.setState({ isListingLoading: true });\n    const API_URL = URL_FOR_USER_LIKES_QUERY(userId);\n    axios.get(API_URL, {\n      params: {\n        page,\n        perPage,\n        client_id: process.env.REACT_APP_UNSPLASH_API_KEY,\n      },\n    }).then((res) => {\n      const cards = get(res, 'data') || [];\n      const totalCards = parseInt(get(res, 'headers[\"x-total\"]'), 10) || 10;\n      this.setState({\n        cards,\n        isListingLoading: false,\n        totalCards,\n      });\n    })\n      .catch(() => {\n        history.push('/');\n      });\n  }\n\n  render() {\n    const {\n      isListingLoading,\n      cards,\n      totalCards,\n      page,\n      per_page: perPage,\n    } = this.state;\n    return (\n      <div>\n        { isListingLoading && (<Spinner />)}\n        <div>\n          <Row justify=\"center\" style={{ margin: '20px 0' }}>\n            <Col span={24}>\n              {!isListingLoading && (\n                <ul className=\"photo-list user-photos\">\n                  {cards.map(item => (\n                    <li\n                      key={item.id}\n                      className=\"photo-list__item pl-3\"\n                    >\n                      <PhotoCard\n                        photoName={item.urls.regular}\n                        title=\"\"\n                        tags={item.photo_tags}\n                        photoID={item.id}\n                        userID={item.user.username}\n                        userAvatar={item.user.profile_image.small}\n                        onSearchTagValue={this.handleSearchText}\n                      />\n                    </li>\n                  ))\n                  }\n                </ul>\n              )}\n            </Col>\n          </Row>\n          <Row\n            justify=\"center\"\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n            }}\n          >\n            <Col style={{\n              display: 'flex',\n              justifyContent: 'center',\n            }}\n            >\n              {totalCards > perPage && (\n                <Pagination\n                  className=\"ml-3 mb-5\"\n                  onChange={this.handlePaginationChange}\n                  showSizeChanger\n                  current={page}\n                  defaultCurrent={1}\n                  total={totalCards}\n                />\n              )}\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nUserLikesPhotos.propTypes = {\n  history: PropTypes.shape({\n    prop: PropTypes.string,\n  }),\n  userId: PropTypes.string,\n};\nUserLikesPhotos.defaultProps = {\n  history: {},\n  userId: '',\n};\nexport default UserLikesPhotos;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col, Pagination } from 'antd';\nimport axios from 'axios';\nimport get from 'lodash/get';\nimport { Spinner, PhotoCard } from '../../components';\nimport { URL_FOR_USER_PHOTO_LISTING_QUERY } from '../../constants';\nimport './index.css';\n\nclass UserPhotoListing extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isListingLoading: false,\n      cards: [],\n      totalCards: 10,\n      page: 1,\n      per_page: 6,\n    };\n  }\n\n  componentDidMount = () => {\n    this.handleUserPhotoListingQuery();\n  };\n\n  handlePaginationChange = (current) => {\n    this.setState({\n      page: current,\n      per_page: 6,\n    }, this.handleUserPhotoListingQuery);\n  };\n\n  handleUserPhotoListingQuery = () => {\n    const { history, userId } = this.props;\n    const { page, per_page: perPage } = this.state;\n    this.setState({ isListingLoading: true });\n    const API_URL = URL_FOR_USER_PHOTO_LISTING_QUERY(userId);\n    axios.get(API_URL, {\n      params: {\n        page,\n        perPage,\n        client_id: process.env.REACT_APP_UNSPLASH_API_KEY,\n      },\n    }).then((res) => {\n      const cards = get(res, 'data') || [];\n      const totalCards = parseInt(get(res, 'headers[\"x-total\"]'), 10) || 10;\n      this.setState({\n        cards,\n        isListingLoading: false,\n        totalCards,\n      });\n    })\n      .catch(() => {\n        history.push('/');\n      });\n  }\n\n  render() {\n    const {\n      isListingLoading,\n      cards,\n      totalCards,\n      page,\n      per_page: perPage,\n    } = this.state;\n    return (\n      <div>\n        { isListingLoading && (<Spinner className=\"spinner\" />)}\n        <div>\n          <Row\n            justify=\"center\"\n            style={{ margin: '20px 0' }}\n          >\n            <Col span={24}>\n              {!isListingLoading && (\n                <ul className=\"photo-list user-photos \">\n                  {\n                    cards.map(item => (\n                      <li\n                        key={item.id}\n                        className=\"photo-list__item pl-3\"\n                      >\n                        <PhotoCard\n                          photoName={item.urls.regular}\n                          title=\"\"\n                          tags={item.photo_tags}\n                          photoID={item.id}\n                          userID={item.user.username}\n                          userAvatar={item.user.profile_image.large}\n                          onSearchTagValue={this.handleSearchText}\n                        />\n                      </li>\n                    ))\n                  }\n                </ul>\n              )}\n            </Col>\n          </Row>\n          <Row\n            justify=\"center\"\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n            }}\n          >\n            <Col\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n              }}\n            >\n              {totalCards > perPage && (\n                <Pagination\n                  className=\"ml-3 mb-5\"\n                  onChange={this.handlePaginationChange}\n                  showSizeChanger\n                  current={page}\n                  defaultCurrent={1}\n                  total={totalCards}\n                />\n              )}\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nUserPhotoListing.propTypes = {\n  history: PropTypes.shape({\n    prop: PropTypes.string,\n  }),\n  userId: PropTypes.string,\n};\nUserPhotoListing.defaultProps = {\n  history: {},\n  userId: '',\n};\nexport default UserPhotoListing;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Highcharts from 'react-highcharts';\nimport { Spinner, Error } from '../../components';\nimport { userStatistingRequestAction } from '../../actions';\nimport './index.css';\n\nclass UserStatistic extends PureComponent {\n  componentDidMount = () => {\n    const { userId } = this.props;\n    const { userStatistingRequestAction: handleAction } = this.props;\n    handleAction(userId);\n  }\n\n  render() {\n    const {\n      isListingLoading,\n      highchartsConfigs,\n      requestError,\n    } = this.props;\n    return (\n      <div className=\"user-statistic\">\n        { isListingLoading && (<Spinner className=\"spinner\" />)}\n        { !isListingLoading && !requestError && (\n        <div className=\"user-statistic__charts\">\n          <div className=\"user-statistic__chart-wrap\">\n            <Highcharts\n              key=\"1\"\n              className=\"user-statistic__chart\"\n              config={highchartsConfigs.highchartsDownloadsConfig}\n            />\n          </div>\n\n          <div className=\"user-statistic__chart-wrap\">\n            <Highcharts\n              key=\"2\"\n              className=\"user-statistic__chart\"\n              config={highchartsConfigs.highchartsViewsConfig}\n            />\n          </div>\n\n          <div className=\"user-statistic__chart-wrap\">\n            <Highcharts\n              key=\"3\"\n              className=\"user-statistic__chart user-statistic-chart\"\n              config={highchartsConfigs.highchartsLikesConfig}\n            />\n          </div>\n        </div>\n        )}\n        { !isListingLoading && requestError && (\n          <Error text=\"Failed to get user statistics. Try later again\" />\n        )}\n      </div>\n    );\n  }\n}\n\nUserStatistic.propTypes = {\n  userStatistingRequestAction: PropTypes.func,\n  isListingLoading: PropTypes.bool,\n  userId: PropTypes.string,\n  highchartsConfigs: PropTypes.shape({\n    highchartsDownloadsConfig: PropTypes.shape({}),\n    highchartsViewsConfig: PropTypes.shape({}),\n    highchartsLikesConfig: PropTypes.shape({}),\n  }),\n  requestError: PropTypes.bool,\n};\nUserStatistic.defaultProps = {\n  userStatistingRequestAction: () => {},\n  isListingLoading: false,\n  userId: '',\n  highchartsConfigs: {\n    highchartsDownloadsConfig: {},\n    highchartsViewsConfig: {},\n    highchartsLikesConfig: {},\n  },\n  requestError: false,\n};\n\nconst mapStateToProps = (state) => {\n  const { userstatistic } = state;\n  return userstatistic;\n};\n\nconst mapDispatchToProps = ({\n  userStatistingRequestAction,\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(UserStatistic);\n","import React, { memo } from 'react';\nimport { LastLocationProvider } from 'react-router-last-location';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport { Row, Col, Layout } from 'antd';\nimport {\n  Home,\n  Photo,\n  User,\n  UserPhotoListing,\n  Profile,\n  HeaderApp,\n} from '../components';\nimport './index.scss';\n\nconst Main = memo(() => (\n  <BrowserRouter basename={process.env.PUBLIC_URL || '/'}>\n    <LastLocationProvider>\n      <Row className=\"header-row\" style={{ margin: '0px 0 30px' }}>\n        <Col>\n          <Layout className=\"user-layout\">\n            <HeaderApp />\n          </Layout>\n        </Col>\n      </Row>\n      <div className=\"page\">\n        <Switch>\n          <Route exact path=\"/\" component={props => <Home {...props} />} />\n          <Route path=\"/users/:id/photos\" component={props => <UserPhotoListing {...props} />} />\n          <Route path=\"/photo/:id\" component={props => <Photo {...props} />} />\n          <Route path=\"/profile\" component={props => <Profile {...props} />} />\n          <Route path=\"/users/:id\" component={props => <User {...props} />} />\n          <Route path=\"/:tag\" component={props => <Home {...props} />} />\n        </Switch>\n      </div>\n    </LastLocationProvider>\n  </BrowserRouter>\n));\n\nexport default Main;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n/* eslint no-param-reassign: \"error\" */\n/* eslint-disable no-console */\nfunction registerValidSW(swUrl, config) {\n  window.navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (window.navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  window.fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        window.navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in window.navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        window.navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in window.navigator) {\n    window.navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import filters from './filters';\n\nconst initialStore = {\n  login: {\n    profilePhotoUrl: '',\n    profileFullName: '',\n    profileName: '',\n    profileEmail: '',\n    fetching: false,\n    loginError: false,\n  },\n  photolisting: {\n    filters,\n    isListingLoading: false,\n    cards: [],\n    totalCards: 10,\n    navTopItemActive: 2,\n    cardsData: {\n      query: 'wallpapers',\n      page: 1,\n      per_page: 6,\n    },\n    photolistingRequestError: false,\n  },\n  userstatistic: {\n    isListingLoading: false,\n    highchartsConfigs: {\n      highchartsDownloadsConfig: {},\n      highchartsViewsConfig: {},\n      highchartsLikesConfig: {},\n    },\n    requestError: false,\n  },\n  photo: {\n    info: {\n      lastUpdateInfo: '',\n      photoDesc: '',\n      views: 0,\n      downloads: 0,\n      likes: 0,\n      cameraMake: '',\n      focalLength: '',\n      aperture: '',\n      shutterspeed: '',\n      iso: 0,\n      cameraModel: '',\n      width: '',\n      height: '',\n    },\n    userFirstName: '',\n    userLastName: '',\n    userName: '',\n    twitterName: '',\n    photoProfile: '',\n    tags: [],\n    altDescriprion: '',\n    photoSrc: '',\n    widthPhoto: 300,\n    heightPhoto: 300,\n    isPhotoLoading: true,\n    isSuccessPhotoRequest: true,\n    requestError: false,\n  },\n};\nexport default initialStore;\n","const filters = [\n  {\n    id: 0,\n    label: 'Editorial',\n    filterValue: 'editorial',\n  },\n  {\n    id: 1,\n    label: 'Following',\n    filterValue: 'following',\n    border: true,\n  },\n  {\n    id: 2,\n    label: 'Wallpapers',\n    filterValue: 'wallpapers',\n  },\n  {\n    id: 3,\n    label: 'Textures & Patterns',\n    filterValue: 'textures',\n  },\n  {\n    id: 4,\n    label: 'Nature',\n    filterValue: 'nature',\n  },\n  {\n    id: 5,\n    label: 'Current Events',\n    filterValue: 'events',\n  },\n  {\n    id: 6,\n    label: 'Architecture',\n    filterValue: 'architecture',\n  },\n  {\n    id: 7,\n    label: 'Business & Work',\n    filterValue: 'business',\n  },\n  {\n    id: 8,\n    label: 'Animals',\n    filterValue: 'animals',\n  },\n  {\n    id: 9,\n    label: 'Travel',\n    filterValue: 'travel',\n  },\n  {\n    id: 10,\n    label: 'Fashion',\n    filterValue: 'fashion',\n  },\n  {\n    id: 11,\n    label: 'Food & Drink',\n    filterValue: 'food-drink',\n  },\n  {\n    id: 12,\n    label: 'Spirituality',\n    filterValue: 'spirituality',\n  },\n  {\n    id: 13,\n    label: 'Experimental',\n    filterValue: 'experimental',\n  },\n  {\n    id: 14,\n    label: 'People',\n    filterValue: 'people',\n  },\n  {\n    id: 15,\n    label: 'Health',\n    filterValue: 'health',\n  },\n  {\n    id: 16,\n    label: 'Arts & Culture',\n    filterValue: 'arts-culture',\n  },\n];\nexport default filters;\n","import initialStore from '../initialStore';\n\nconst login = (state = initialStore, action) => {\n  switch (action.type) {\n    case 'LOGIN_FETCHING':\n      return {\n        ...state,\n        fetching: true,\n        loginError: false,\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        ...action.dataForProps,\n        fetching: false,\n        loginError: false,\n      };\n    case 'LOGIN_ERROR':\n      return {\n        ...state,\n        fetching: false,\n        loginError: true,\n      };\n    case 'LOGOUT':\n      return initialStore.login;\n    default:\n      return state;\n  }\n};\n\nexport default login;\n","import initialStore from '../initialStore';\n\nconst photolisting = (state = initialStore, action) => {\n  switch (action.type) {\n    case 'CARDS_PHOTOS_FETCHING':\n      return {\n        ...state,\n        isListingLoading: true,\n      };\n    case 'CARDS_PHOTOS_REQUEST_SUCCESS':\n      return {\n        ...state,\n        ...action.dataForProps,\n        photolistingRequestError: false,\n      };\n    case 'PAGINATION_CHANGE':\n      return {\n        ...state,\n        cardsData: {\n          ...state.cardsData,\n          page: action.page,\n        },\n      };\n    case 'FILTER_ITEM_VALUE':\n      return {\n        ...state,\n        navTopItemActive: action.itemId,\n        cardsData: {\n          ...state.cardsData,\n          page: 1,\n          query: action.itemText,\n        },\n      };\n    case 'SEARCH_TEXT':\n      return {\n        ...state,\n        navTopItemActive: action.tags ? -2 : state.navTopItemActive,\n        cardsData: {\n          ...state.cardsData,\n          page: 1,\n          query: action.text,\n        },\n      };\n    case 'SEARCH_TEXT_CHANGE_INPUT_VALUE':\n      return {\n        ...state,\n        cardsData: {\n          ...state.cardsData,\n          query: action.text,\n        },\n      };\n    case 'CARDS_PHOTOS_REQUEST_ERROR':\n      return {\n        ...state,\n        isListingLoading: false,\n        photolistingRequestError: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default photolisting;\n","import initialStore from '../initialStore';\n\nconst userstatistic = (state = initialStore, action) => {\n  switch (action.type) {\n    case 'USER_STATISTIC_FETCHING':\n      return {\n        ...state,\n        isListingLoading: true,\n      };\n    case 'USER_STATISTIC_REQUEST_SUCCESS':\n      return {\n        ...state,\n        highchartsConfigs: action.highchartsConfigsObject,\n        isListingLoading: false,\n        requestError: false,\n      };\n    case 'USER_STATISTIC_REQUEST_ERROR':\n      return {\n        ...state,\n        isListingLoading: false,\n        requestError: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userstatistic;\n","import initialStore from '../initialStore';\n\nconst photo = (state = initialStore, action) => {\n  switch (action.type) {\n    case 'PHOTO_FETCHING':\n      return {\n        ...state,\n        isPhotoLoading: true,\n        isSuccessPhotoRequest: true,\n      };\n    case 'PHOTO_REQUEST_SUCCESS':\n      return {\n        ...state,\n        ...action.dataForProps,\n        isPhotoLoading: true,\n        isSuccessPhotoRequest: false,\n        requestError: false,\n      };\n    case 'PHOTO_REQUEST_ERROR':\n      return {\n        ...state,\n        isPhotoLoading: false,\n        isSuccessPhotoRequest: false,\n        requestError: true,\n      };\n    case 'PHOTO_IMAGE_LOAD':\n      return {\n        ...state,\n        isPhotoLoading: false,\n        isSuccessPhotoRequest: false,\n        requestError: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default photo;\n","import { combineReducers } from 'redux';\nimport login from './login';\nimport photolisting from './photolisting';\nimport userstatistic from './userstatistic';\nimport photo from './photo';\n\nconst allRedusers = combineReducers({\n  login,\n  photolisting,\n  userstatistic,\n  photo,\n});\n\nexport default allRedusers;\n","import axios from 'axios';\nimport { put } from 'redux-saga/effects';\nimport get from 'lodash/get';\nimport { URL_FOR_PROFILE_ME, URL_FOR_TOKEN, URL_FOR_AVATAR_PLACEHOLDER } from '../constants';\n\nexport function* loginAfterToken(token) {\n  if (token) {\n    try {\n      const headers = {\n        Authorization: `Bearer ${token}`,\n      };\n      const response = yield axios.get(URL_FOR_PROFILE_ME, { headers });\n      const dataForProps = {\n        profilePhotoUrl: get(response, 'data.profile_image.large', URL_FOR_AVATAR_PLACEHOLDER),\n        profileName: get(response, 'data.first_name', ''),\n        profileFullName: get(response, 'data.name', ''),\n        profileEmail: get(response, 'data.email', ''),\n      };\n\n      yield put({ type: 'LOGIN_SUCCESS', dataForProps });\n    } catch (error) {\n      yield put({ type: 'LOGIN_ERROR' });\n    }\n  }\n}\nexport function* loginSaga(action) {\n  const tokenFirst = window.localStorage.getItem('token');\n  if (tokenFirst) {\n    yield loginAfterToken(tokenFirst);\n  } else {\n    const code = action.location.search.split('?code=')[1];\n    if (code) {\n      try {\n        const axiosRequestForToken = {\n          url: URL_FOR_TOKEN,\n          body: {\n            redirect_uri: process.env.REACT_APP_UNSPLASH_API_REDIRECT_URI,\n            client_secret: process.env.REACT_APP_UNSPLASH_API_CLIENT_SECRET,\n            code,\n            grant_type: 'authorization_code',\n            client_id: process.env.REACT_APP_UNSPLASH_API_KEY,\n          },\n        };\n\n        const response = yield axios.post(axiosRequestForToken.url, axiosRequestForToken.body);\n        const token = get(response, 'data.access_token', false);\n        window.localStorage.clear();\n        window.localStorage.setItem('token', token);\n        yield loginAfterToken(token);\n      } catch (error) {\n        yield put({ type: 'LOGIN_ERROR' });\n      }\n    } else {\n      yield put({ type: 'LOGIN_ERROR' });\n    }\n  }\n}\n","import axios from 'axios';\nimport { put } from 'redux-saga/effects';\nimport get from 'lodash/get';\nimport { URL_FOR_CARDS_PHOTOS } from '../constants';\n\nexport default function* cardsPhotosRequestSaga(action) {\n  const { cardsData } = action;\n  if (cardsData) {\n    try {\n      const axiosRequestForcardsPhotos = {\n        url: URL_FOR_CARDS_PHOTOS,\n        params: {\n          ...cardsData,\n          client_id: process.env.REACT_APP_UNSPLASH_API_KEY,\n        },\n      };\n      const response = yield axios.get(axiosRequestForcardsPhotos.url, {\n        params: axiosRequestForcardsPhotos.params,\n      });\n\n      const cards = get(response, 'data.results', []);\n      const newCards = [];\n      if (cards.length) {\n        cards.forEach((item) => {\n          const newCardsItem = {\n            photoName: get(item, 'urls.regular', ''),\n            photoDesc: get(item, 'description', ''),\n            title: get(item, 'user.first_name', ''),\n            tags: get(item, 'tags', []),\n            photoID: get(item, 'id', ''),\n            userID: get(item, 'user.username', ''),\n            userAvatar: get(item, 'user.profile_image.large', ''),\n          };\n          newCards.push(newCardsItem);\n        });\n      }\n      const dataForProps = {\n        cards: newCards,\n        isListingLoading: false,\n        totalCards: get(response, 'data.total', 10),\n      };\n      yield put({ type: 'CARDS_PHOTOS_REQUEST_SUCCESS', dataForProps });\n    } catch (error) {\n      yield put({ type: 'CARDS_PHOTOS_REQUEST_ERROR', error });\n    }\n  }\n}\n","import axios from 'axios';\nimport moment from 'moment';\nimport 'moment-timezone';\nimport { put } from 'redux-saga/effects';\nimport get from 'lodash/get';\nimport {\n  URL_FOR_USER_STATISTIC,\n  INITIONAL_CHARTS_CONFIGS,\n  CHARTS_CATEGORIES,\n  CHART_CONFIG,\n} from '../constants';\n\nconst createCharts = (config) => {\n  const configArr = Object.entries(config);\n  const newObj = {};\n\n  configArr.forEach((item) => {\n    newObj[item[0]] = {\n      chart: {\n        type: 'area',\n      },\n      colors: [item[1].colors],\n      title: {\n        text: item[1].title,\n      },\n      xAxis: {\n        categories: CHARTS_CATEGORIES,\n      },\n      plotOptions: {\n        area: {\n          stacking: 'normal',\n          lineColor: item[1].colors,\n          lineWidth: 1,\n          marker: {\n            lineWidth: 6,\n            lineColor: item[1].colors,\n          },\n        },\n      },\n      series: [\n        {\n          name: item[1].seriesName,\n        },\n      ],\n      ...CHART_CONFIG,\n    };\n  });\n  return newObj;\n};\n\nexport default function* userStatisticRequestSaga(action) {\n  const { userId } = action;\n  if (userId) {\n    try {\n      const highchartsConfigs = createCharts(INITIONAL_CHARTS_CONFIGS);\n\n      const axiosRequestUserStatistic = {\n        url: URL_FOR_USER_STATISTIC(userId),\n        params: {\n          client_id: process.env.REACT_APP_UNSPLASH_API_KEY,\n        },\n      };\n      const responce = yield axios.get(axiosRequestUserStatistic.url, {\n        params: axiosRequestUserStatistic.params,\n      });\n\n      const highchartsDownloadsConfigData = get(responce, 'data.downloads.historical.values', []);\n      const highchartsViewsConfigData = get(responce, 'data.views.historical.values', []);\n      const highchartsLikesConfigData = get(responce, 'data.likes.historical.values', []);\n\n      const highchartsConfigsObject = {\n        highchartsDownloadsConfig: {\n          ...highchartsConfigs.highchartsDownloadsConfig,\n          xAxis: {\n            categories: highchartsDownloadsConfigData.map(item => moment(item.date).format('DD MMMM YYYY')),\n          },\n          series: [\n            {\n              ...highchartsConfigs.highchartsDownloadsConfig.series[0],\n              data: highchartsDownloadsConfigData.map(item => item.value),\n            },\n          ],\n        },\n        highchartsViewsConfig: {\n          ...highchartsConfigs.highchartsViewsConfig,\n          xAxis: {\n            categories: highchartsViewsConfigData.map(item => moment(item.date).format('DD MMMM YYYY')),\n          },\n          series: [\n            {\n              ...highchartsConfigs.highchartsViewsConfig.series[0],\n              data: highchartsViewsConfigData.map(item => item.value),\n            },\n          ],\n        },\n        highchartsLikesConfig: {\n          ...highchartsConfigs.highchartsLikesConfig,\n          xAxis: {\n            categories: highchartsLikesConfigData.map(item => moment(item.date).format('DD MMMM YYYY')),\n          },\n          series: [\n            {\n              ...highchartsConfigs.highchartsLikesConfig.series[0],\n              data: highchartsLikesConfigData.map(item => item.value),\n            },\n          ],\n        },\n      };\n      yield put({ type: 'USER_STATISTIC_REQUEST_SUCCESS', highchartsConfigsObject });\n    } catch (error) {\n      yield put({ type: 'USER_STATISTIC_REQUEST_ERROR', error });\n    }\n  } else {\n    yield put({ type: 'USER_STATISTIC_REQUEST_ERROR' });\n  }\n}\n","import axios from 'axios';\nimport { put } from 'redux-saga/effects';\nimport get from 'lodash/get';\nimport { URL_FOR_PHOTO_QUERY } from '../constants';\n\nexport default function* photoRequestSaga(action) {\n  const { match } = action;\n  if (match) {\n    try {\n      const responce = yield axios.get(URL_FOR_PHOTO_QUERY(match));\n      const dataForProps = {\n        info: {\n          lastUpdateInfo: get(responce, 'data.updated_at', ''),\n          photoDesc: get(responce, 'data.description', ''),\n          views: get(responce, 'data.views', 0),\n          downloads: get(responce, 'data.downloads', 0),\n          likes: get(responce, 'data.likes', 0),\n          cameraMake: get(responce, 'data.exif.make', ''),\n          focalLength: get(responce, 'data.exif.focal_length', ''),\n          aperture: get(responce, 'data.exif.aperture', ''),\n          shutterspeed: get(responce, 'data.exif.exposure_time', ''),\n          iso: get(responce, 'data.exif.iso', 0),\n          cameraModel: get(responce, 'data.exif.model', ''),\n          width: get(responce, 'data.width', 300),\n          height: get(responce, 'data.height', 300),\n        },\n        userFirstName: get(responce, 'data.user.first_name', ''),\n        userLastName: get(responce, 'data.user.last_name', ''),\n        userName: get(responce, 'data.user.username', ''),\n        twitterName: get(responce, 'data.user.instagram_username', ''),\n        photoProfile: get(responce, 'data.user.profile_image.large', ''),\n        tags: get(responce, 'data.tags', []),\n        altDescriprion: get(responce, 'data.alt_description', ''),\n        photoSrc: get(responce, 'data.urls.regular', ''),\n        widthPhoto: get(responce, 'data.width', 300),\n        heightPhoto: get(responce, 'data.height', 300),\n      };\n      yield put({ type: 'PHOTO_REQUEST_SUCCESS', dataForProps });\n    } catch (error) {\n      yield put({ type: 'PHOTO_REQUEST_ERROR', error });\n    }\n  }\n}\n","import { takeEvery, all } from 'redux-saga/effects';\nimport { loginSaga } from './login';\nimport cardsPhotosRequestSaga from './photolisting';\nimport userStatisticRequestSaga from './userstatistic';\nimport photoRequestSaga from './photo';\n\nexport default function* rootSaga() {\n  yield all([\n    yield takeEvery('LOGIN_FETCHING', loginSaga),\n    yield takeEvery('CARDS_PHOTOS_FETCHING', cardsPhotosRequestSaga),\n    yield takeEvery('USER_STATISTIC_FETCHING', userStatisticRequestSaga),\n    yield takeEvery('PHOTO_FETCHING', photoRequestSaga),\n  ]);\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport Main from './router';\nimport * as serviceWorker from './serviceWorker';\nimport allRedusers from './reducers';\nimport initialStore from './initialStore';\nimport rootSaga from './sagas';\nimport './index.scss';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware];\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nconst store = createStore(allRedusers, initialStore, applyMiddleware(...middleware));\n\nsagaMiddleware.run(rootSaga, [555]);\n\nrender(\n  <Provider store={store}>\n    <Main />\n  </Provider>,\n  window.document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}